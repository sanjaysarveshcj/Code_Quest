{"ast":null,"code":"import * as api from \"../api\";\nexport const fetchallusers = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getallusers();\n    dispatch({\n      type: \"FETCH_USERS\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateprofile = (id, updatedata) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateprofile(id, updatedata);\n    dispatch({\n      type: \"UPDATE_CURRENT_USER\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","fetchallusers","dispatch","data","getallusers","type","payload","error","console","log","updateprofile","id","updatedata"],"sources":["D:/codequest-main (2)/codequest-main/client/src/action/users.js"],"sourcesContent":["import * as api from \"../api\"\nexport const fetchallusers=()=> async(dispatch)=>{\n    try {\n        const {data}=await api.getallusers();\n        dispatch({type:\"FETCH_USERS\",payload:data});\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const updateprofile=(id,updatedata)=>async(dispatch)=>{\n    try {\n        const {data}=await api.updateprofile(id,updatedata);\n        dispatch({type:\"UPDATE_CURRENT_USER\",payload:data});\n    } catch (error) {\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,OAAO,MAAMC,aAAa,GAACA,CAAA,KAAK,MAAMC,QAAQ,IAAG;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMH,GAAG,CAACI,WAAW,CAAC,CAAC;IACpCF,QAAQ,CAAC;MAACG,IAAI,EAAC,aAAa;MAACC,OAAO,EAACH;IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,aAAa,GAACA,CAACC,EAAE,EAACC,UAAU,KAAG,MAAMV,QAAQ,IAAG;EACzD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMH,GAAG,CAACU,aAAa,CAACC,EAAE,EAACC,UAAU,CAAC;IACnDV,QAAQ,CAAC;MAACG,IAAI,EAAC,qBAAqB;MAACC,OAAO,EAACH;IAAI,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}