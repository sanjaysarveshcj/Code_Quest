{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Multilingual.css';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [language, setLanguage] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(null);\n  const [selectedLang, setSelectedLang] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\n  const [confirmedLanguage, setConfirmedLanguage] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\n  const [translationComplete, setTranslationComplete] = useState(false);\n  const location = useLocation();\n  const translatePage = async (lang, retryCount = 0) => {\n    try {\n      var _response$data;\n      console.log(`Requesting translation for: ${lang}`);\n      const elements = document.body.getElementsByTagName(\"*\");\n      let textNodes = [];\n      for (let i = 0; i < elements.length; i++) {\n        let element = elements[i];\n        for (let node of element.childNodes) {\n          if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" && window.getComputedStyle(element).display !== \"none\") {\n            textNodes.push({\n              node,\n              text: node.nodeValue.trim()\n            });\n          }\n        }\n        if (element.placeholder) {\n          textNodes.push({\n            node: element,\n            text: element.placeholder,\n            isPlaceholder: true\n          });\n        }\n      }\n      let texts = textNodes.map(item => item.text);\n      const response = await axios.post(\"http://localhost:5000/api/translate\", {\n        text: texts,\n        targetLang: lang\n      });\n      console.log(\"Full Translation Response:\", response.data);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.error && response.data.error.includes(\"Model Helsinki-NLP\")) {\n        if (retryCount < 5) {\n          console.log(`Retrying translation in 5 seconds... (${retryCount + 1}/5)`);\n          setTimeout(() => translatePage(lang, retryCount + 1), 5000);\n        } else {\n          setTranslatedText(\"Translation failed after multiple attempts.\");\n        }\n        return;\n      }\n      if (Array.isArray(response.data) && response.data.length === textNodes.length) {\n        textNodes.forEach((item, index) => {\n          var _response$data$index;\n          let translatedText = ((_response$data$index = response.data[index]) === null || _response$data$index === void 0 ? void 0 : _response$data$index.translation_text) || item.text;\n          if (item.isPlaceholder) {\n            item.node.placeholder = translatedText;\n          } else {\n            item.node.nodeValue = translatedText;\n          }\n        });\n        setTranslatedText(\"Translation successful âœ…\");\n      } else {\n        console.error(\"Unexpected response format:\", response.data);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Translation Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const resetForm = () => {\n    setEmailOrMobile(\"\");\n    setOtp(\"\");\n    setIsVerified(false);\n    setMessage(\"\");\n    setTranslatedText(null);\n    setTranslationComplete(false);\n    // Keep the confirmed language\n  };\n  const handleLanguageChange = async lang => {\n    console.log(\"Selected Language:\", lang);\n    setLanguage(lang);\n    setSelectedLang(lang);\n    // Only store in localStorage after OTP verification succeeds\n    // We'll update localStorage in handleVerifyOtp if verification is successful\n\n    setTranslatedText(null);\n    if (isVerified) {\n      // If already verified, apply translation immediately\n      await i18n.changeLanguage(lang);\n      localStorage.setItem(\"selectedLanguage\", lang);\n      setConfirmedLanguage(lang);\n      setTranslationComplete(true);\n\n      // Reset form after a short delay (to allow user to see success message)\n      setTimeout(() => {\n        resetForm();\n      }, 2000);\n    }\n  };\n  const handleSendOtp = async () => {\n    if (!emailOrMobile) {\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile\n    } : {\n      mobile: emailOrMobile\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to send OTP.\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile,\n      otp\n    } : {\n      mobile: emailOrMobile,\n      otp\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n      localStorage.setItem('isOtpVerified', 'true');\n      setIsVerified(true);\n      await i18n.changeLanguage(language);\n      localStorage.setItem(\"selectedLanguage\", language);\n      setConfirmedLanguage(language);\n      setTranslationComplete(true);\n\n      // Reset form after a short delay (to allow user to see success message)\n      setTimeout(() => {\n        resetForm();\n      }, 2000);\n\n      // await translatePage(language);\n\n      // await translatePage(localStorage.getItem(\"selectedLanguage\") || language);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setLanguage(confirmedLanguage);\n      setSelectedLang(confirmedLanguage);\n      setMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: isVerified && !translationComplete ? translatedText || t(\"welcomeMessage\") : t(\"welcomeMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"otp-language-selector\",\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: t(\"english\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: t(\"spanish\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: t(\"hindi\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: t(\"portuguese\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: t(\"chinese\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: t(\"french\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-input-container\",\n      children: [language === \"fr\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"email\",\n        placeholder: t(\"enterEmail\"),\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: t(\"enterMobile\"),\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleSendOtp,\n        children: t(\"sendOtp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `otp-message ${isVerified && !translationComplete ? \"success\" : \"error\"}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }, this), emailOrMobile && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-verification-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: t(\"enterOtp\"),\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleVerifyOtp,\n        children: t(\"verifyOtp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), isVerified && !translationComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-success-message\",\n      children: translatedText || t(\"verificationSuccess\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), translationComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-success-message\",\n      children: t(\"translationComplete\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"9MgOrkxqu87C2l12knHpVduSMvQ=\", false, function () {\n  return [useTranslation, useLocation];\n});\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","axios","useTranslation","jsxDEV","_jsxDEV","Multilingual","_s","t","i18n","language","setLanguage","localStorage","getItem","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","message","setMessage","translatedText","setTranslatedText","selectedLang","setSelectedLang","confirmedLanguage","setConfirmedLanguage","translationComplete","setTranslationComplete","location","translatePage","lang","retryCount","_response$data","console","log","elements","document","body","getElementsByTagName","textNodes","i","length","element","node","childNodes","nodeType","Node","TEXT_NODE","nodeValue","trim","window","getComputedStyle","display","push","text","placeholder","isPlaceholder","texts","map","item","response","post","targetLang","data","error","includes","setTimeout","Array","isArray","forEach","index","_response$data$index","translation_text","_error$response","resetForm","handleLanguageChange","changeLanguage","setItem","handleSendOtp","alert","endpoint","payload","email","mobile","_error$response2","_error$response2$data","handleVerifyOtp","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Multilingual.css';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Multilingual = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const [language, setLanguage] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [translatedText, setTranslatedText] = useState(null);\r\n  const [selectedLang, setSelectedLang] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\r\n  const [confirmedLanguage, setConfirmedLanguage] = useState(localStorage.getItem(\"selectedLanguage\") || \"en\");\r\n  const [translationComplete, setTranslationComplete] = useState(false);\r\n\r\n\r\n\r\n  const location = useLocation();\r\n\r\n\r\n  const translatePage = async (lang, retryCount = 0) => {\r\n\r\n    try {\r\n        console.log(`Requesting translation for: ${lang}`);\r\n\r\n        const elements = document.body.getElementsByTagName(\"*\");\r\n        let textNodes = [];\r\n\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let element = elements[i];\r\n\r\n            for (let node of element.childNodes) {\r\n                if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" &&\r\n                    window.getComputedStyle(element).display !== \"none\") {\r\n                    textNodes.push({ node, text: node.nodeValue.trim() });\r\n                }\r\n            }\r\n\r\n            if (element.placeholder) {\r\n                textNodes.push({ node: element, text: element.placeholder, isPlaceholder: true });\r\n            }\r\n        }\r\n\r\n        let texts = textNodes.map(item => item.text);\r\n        const response = await axios.post(\"http://localhost:5000/api/translate\", {\r\n            text: texts,\r\n            targetLang: lang,\r\n        });\r\n\r\n        console.log(\"Full Translation Response:\", response.data);\r\n\r\n        if (response.data?.error && response.data.error.includes(\"Model Helsinki-NLP\")) {\r\n            if (retryCount < 5) {\r\n                console.log(`Retrying translation in 5 seconds... (${retryCount + 1}/5)`);\r\n                setTimeout(() => translatePage(lang, retryCount + 1), 5000);\r\n            } else {\r\n                setTranslatedText(\"Translation failed after multiple attempts.\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(response.data) && response.data.length === textNodes.length) {\r\n            textNodes.forEach((item, index) => {\r\n                let translatedText = response.data[index]?.translation_text || item.text;\r\n                if (item.isPlaceholder) {\r\n                    item.node.placeholder = translatedText;\r\n                } else {\r\n                    item.node.nodeValue = translatedText;\r\n                }\r\n            });\r\n\r\n            setTranslatedText(\"Translation successful âœ…\");\r\n        } else {\r\n            console.error(\"Unexpected response format:\", response.data);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Translation Error:\", error.response?.data || error.message);\r\n    }\r\n};\r\n\r\n\r\nconst resetForm = () => {\r\n  setEmailOrMobile(\"\");\r\n  setOtp(\"\");\r\n  setIsVerified(false);\r\n  setMessage(\"\");\r\n  setTranslatedText(null);\r\n  setTranslationComplete(false);\r\n  // Keep the confirmed language\r\n};\r\n\r\n\r\nconst handleLanguageChange = async (lang) => {\r\n  console.log(\"Selected Language:\", lang);\r\n  setLanguage(lang); \r\n  setSelectedLang(lang);\r\n  // Only store in localStorage after OTP verification succeeds\r\n  // We'll update localStorage in handleVerifyOtp if verification is successful\r\n  \r\n  setTranslatedText(null);\r\n\r\n  if (isVerified) {\r\n    // If already verified, apply translation immediately\r\n    await i18n.changeLanguage(lang);\r\n    localStorage.setItem(\"selectedLanguage\", lang);\r\n    setConfirmedLanguage(lang);\r\n\r\n    setTranslationComplete(true);\r\n      \r\n      // Reset form after a short delay (to allow user to see success message)\r\n      setTimeout(() => {\r\n        resetForm();\r\n      }, 2000);\r\n  }\r\n};\r\n\r\n\r\n\r\n  const handleSendOtp = async () => {\r\n    if (!emailOrMobile) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile } : { mobile: emailOrMobile };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile, otp } : { mobile: emailOrMobile, otp };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setMessage(response.data.message || \"OTP verified successfully!\");\r\n      localStorage.setItem('isOtpVerified', 'true');\r\n      setIsVerified(true);\r\n\r\n      await i18n.changeLanguage(language);\r\n      localStorage.setItem(\"selectedLanguage\", language);\r\n      setConfirmedLanguage(language); \r\n\r\n      setTranslationComplete(true);\r\n      \r\n      // Reset form after a short delay (to allow user to see success message)\r\n      setTimeout(() => {\r\n        resetForm();\r\n      }, 2000);\r\n\r\n\r\n\r\n      // await translatePage(language);\r\n\r\n      // await translatePage(localStorage.getItem(\"selectedLanguage\") || language);\r\n\r\n\r\n    } catch (error) {\r\n      setLanguage(confirmedLanguage);\r\n      setSelectedLang(confirmedLanguage);\r\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-page\">\r\n      <h1 className=\"otp-title\">\r\n        {isVerified && !translationComplete\r\n          ? (translatedText || t(\"welcomeMessage\"))\r\n          : t(\"welcomeMessage\")}\r\n      </h1>\r\n  \r\n      <select\r\n        className=\"otp-language-selector\"\r\n        onChange={(e) => handleLanguageChange(e.target.value)}\r\n        value={language}\r\n      >\r\n        <option value=\"en\">{t(\"english\")}</option>\r\n        <option value=\"es\">{t(\"spanish\")}</option>\r\n        <option value=\"hi\">{t(\"hindi\")}</option>\r\n        <option value=\"pt\">{t(\"portuguese\")}</option>\r\n        <option value=\"zh\">{t(\"chinese\")}</option>\r\n        <option value=\"fr\">{t(\"french\")}</option>\r\n      </select>\r\n  \r\n      <div className=\"otp-input-container\">\r\n        {language === \"fr\" ? (\r\n          <input\r\n            className=\"otp-input\"\r\n            type=\"email\"\r\n            placeholder={t(\"enterEmail\")}\r\n            value={emailOrMobile}\r\n            onChange={(e) => setEmailOrMobile(e.target.value)}\r\n          />\r\n        ) : (\r\n          <input\r\n            className=\"otp-input\"\r\n            type=\"text\"\r\n            placeholder={t(\"enterMobile\")}\r\n            value={emailOrMobile}\r\n            onChange={(e) => setEmailOrMobile(e.target.value)}\r\n          />\r\n        )}\r\n        <button className=\"otp-button\" onClick={handleSendOtp}>\r\n          {t(\"sendOtp\")}\r\n        </button>\r\n      </div>\r\n  \r\n      {message && <p className={`otp-message ${isVerified && !translationComplete ? \"success\" : \"error\"}`}>{message}</p>}\r\n  \r\n      {emailOrMobile && !isVerified && (\r\n        <div className=\"otp-verification-container\">\r\n          <input\r\n            className=\"otp-input\"\r\n            type=\"text\"\r\n            placeholder={t(\"enterOtp\")}\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button className=\"otp-button\" onClick={handleVerifyOtp}>\r\n            {t(\"verifyOtp\")}\r\n          </button>\r\n        </div>\r\n      )}\r\n  \r\n      {isVerified && !translationComplete && (\r\n        <p className=\"otp-success-message\">\r\n          {translatedText || t(\"verificationSuccess\")}\r\n        </p>\r\n      )}\r\n      {translationComplete && (\r\n        <p className=\"otp-success-message\">\r\n          {t(\"translationComplete\")}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,CAAC;IAAEC;EAAK,CAAC,GAAGN,cAAc,CAAC,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;EAC1F,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;EAClG,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;EAC5G,MAAM,CAACe,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAIrE,MAAMgC,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAG9B,MAAM8B,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,GAAG,CAAC,KAAK;IAEpD,IAAI;MAAA,IAAAC,cAAA;MACAC,OAAO,CAACC,GAAG,CAAC,+BAA+BJ,IAAI,EAAE,CAAC;MAElD,MAAMK,QAAQ,GAAGC,QAAQ,CAACC,IAAI,CAACC,oBAAoB,CAAC,GAAG,CAAC;MACxD,IAAIC,SAAS,GAAG,EAAE;MAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIE,OAAO,GAAGP,QAAQ,CAACK,CAAC,CAAC;QAEzB,KAAK,IAAIG,IAAI,IAAID,OAAO,CAACE,UAAU,EAAE;UACjC,IAAID,IAAI,CAACE,QAAQ,KAAKC,IAAI,CAACC,SAAS,IAAIJ,IAAI,CAACK,SAAS,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,IAChEC,MAAM,CAACC,gBAAgB,CAACT,OAAO,CAAC,CAACU,OAAO,KAAK,MAAM,EAAE;YACrDb,SAAS,CAACc,IAAI,CAAC;cAAEV,IAAI;cAAEW,IAAI,EAAEX,IAAI,CAACK,SAAS,CAACC,IAAI,CAAC;YAAE,CAAC,CAAC;UACzD;QACJ;QAEA,IAAIP,OAAO,CAACa,WAAW,EAAE;UACrBhB,SAAS,CAACc,IAAI,CAAC;YAAEV,IAAI,EAAED,OAAO;YAAEY,IAAI,EAAEZ,OAAO,CAACa,WAAW;YAAEC,aAAa,EAAE;UAAK,CAAC,CAAC;QACrF;MACJ;MAEA,IAAIC,KAAK,GAAGlB,SAAS,CAACmB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,CAAC;MAC5C,MAAMM,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,IAAI,CAAC,qCAAqC,EAAE;QACrEP,IAAI,EAAEG,KAAK;QACXK,UAAU,EAAEhC;MAChB,CAAC,CAAC;MAEFG,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE0B,QAAQ,CAACG,IAAI,CAAC;MAExD,IAAI,CAAA/B,cAAA,GAAA4B,QAAQ,CAACG,IAAI,cAAA/B,cAAA,eAAbA,cAAA,CAAegC,KAAK,IAAIJ,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QAC5E,IAAIlC,UAAU,GAAG,CAAC,EAAE;UAChBE,OAAO,CAACC,GAAG,CAAC,yCAAyCH,UAAU,GAAG,CAAC,KAAK,CAAC;UACzEmC,UAAU,CAAC,MAAMrC,aAAa,CAACC,IAAI,EAAEC,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QAC/D,CAAC,MAAM;UACHV,iBAAiB,CAAC,6CAA6C,CAAC;QACpE;QACA;MACJ;MAEA,IAAI8C,KAAK,CAACC,OAAO,CAACR,QAAQ,CAACG,IAAI,CAAC,IAAIH,QAAQ,CAACG,IAAI,CAACtB,MAAM,KAAKF,SAAS,CAACE,MAAM,EAAE;QAC3EF,SAAS,CAAC8B,OAAO,CAAC,CAACV,IAAI,EAAEW,KAAK,KAAK;UAAA,IAAAC,oBAAA;UAC/B,IAAInD,cAAc,GAAG,EAAAmD,oBAAA,GAAAX,QAAQ,CAACG,IAAI,CAACO,KAAK,CAAC,cAAAC,oBAAA,uBAApBA,oBAAA,CAAsBC,gBAAgB,KAAIb,IAAI,CAACL,IAAI;UACxE,IAAIK,IAAI,CAACH,aAAa,EAAE;YACpBG,IAAI,CAAChB,IAAI,CAACY,WAAW,GAAGnC,cAAc;UAC1C,CAAC,MAAM;YACHuC,IAAI,CAAChB,IAAI,CAACK,SAAS,GAAG5B,cAAc;UACxC;QACJ,CAAC,CAAC;QAEFC,iBAAiB,CAAC,0BAA0B,CAAC;MACjD,CAAC,MAAM;QACHY,OAAO,CAAC+B,KAAK,CAAC,6BAA6B,EAAEJ,QAAQ,CAACG,IAAI,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAS,eAAA;MACZxC,OAAO,CAAC+B,KAAK,CAAC,oBAAoB,EAAE,EAAAS,eAAA,GAAAT,KAAK,CAACJ,QAAQ,cAAAa,eAAA,uBAAdA,eAAA,CAAgBV,IAAI,KAAIC,KAAK,CAAC9C,OAAO,CAAC;IAC9E;EACJ,CAAC;EAGD,MAAMwD,SAAS,GAAGA,CAAA,KAAM;IACtB7D,gBAAgB,CAAC,EAAE,CAAC;IACpBE,MAAM,CAAC,EAAE,CAAC;IACVE,aAAa,CAAC,KAAK,CAAC;IACpBE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,IAAI,CAAC;IACvBM,sBAAsB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC;EAGD,MAAMgD,oBAAoB,GAAG,MAAO7C,IAAI,IAAK;IAC3CG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,IAAI,CAAC;IACvCrB,WAAW,CAACqB,IAAI,CAAC;IACjBP,eAAe,CAACO,IAAI,CAAC;IACrB;IACA;;IAEAT,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAIL,UAAU,EAAE;MACd;MACA,MAAMT,IAAI,CAACqE,cAAc,CAAC9C,IAAI,CAAC;MAC/BpB,YAAY,CAACmE,OAAO,CAAC,kBAAkB,EAAE/C,IAAI,CAAC;MAC9CL,oBAAoB,CAACK,IAAI,CAAC;MAE1BH,sBAAsB,CAAC,IAAI,CAAC;;MAE1B;MACAuC,UAAU,CAAC,MAAM;QACfQ,SAAS,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAAC;IACZ;EACF,CAAC;EAIC,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAClE,aAAa,EAAE;MAClBmE,KAAK,CAACvE,QAAQ,KAAK,IAAI,GAAG,8BAA8B,GAAG,yCAAyC,CAAC;MACrG;IACF;IAEA,MAAMwE,QAAQ,GAAGxE,QAAQ,KAAK,IAAI,GAAG,eAAe,GAAG,uBAAuB;IAC9E,MAAMyE,OAAO,GAAGzE,QAAQ,KAAK,IAAI,GAAG;MAAE0E,KAAK,EAAEtE;IAAc,CAAC,GAAG;MAAEuE,MAAM,EAAEvE;IAAc,CAAC;IAExF,IAAI;MACF,MAAMgD,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,IAAI,CAAC,wBAAwBmB,QAAQ,EAAE,EAAEC,OAAO,CAAC;MAC9E9D,UAAU,CAACyC,QAAQ,CAACG,IAAI,CAAC7C,OAAO,CAAC;IACnC,CAAC,CAAC,OAAO8C,KAAK,EAAE;MAAA,IAAAoB,gBAAA,EAAAC,qBAAA;MACdlE,UAAU,CAAC,EAAAiE,gBAAA,GAAApB,KAAK,CAACJ,QAAQ,cAAAwB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrB,IAAI,cAAAsB,qBAAA,uBAApBA,qBAAA,CAAsBnE,OAAO,KAAI,qBAAqB,CAAC;IACpE;EACF,CAAC;EAED,MAAMoE,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACxE,GAAG,EAAE;MACRiE,KAAK,CAACvE,QAAQ,KAAK,IAAI,GAAG,8BAA8B,GAAG,uBAAuB,CAAC;MACnF;IACF;IAEA,MAAMwE,QAAQ,GAAGxE,QAAQ,KAAK,IAAI,GAAG,iBAAiB,GAAG,yBAAyB;IAClF,MAAMyE,OAAO,GAAGzE,QAAQ,KAAK,IAAI,GAAG;MAAE0E,KAAK,EAAEtE,aAAa;MAAEE;IAAI,CAAC,GAAG;MAAEqE,MAAM,EAAEvE,aAAa;MAAEE;IAAI,CAAC;IAElG,IAAI;MACF,MAAM8C,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,IAAI,CAAC,wBAAwBmB,QAAQ,EAAE,EAAEC,OAAO,CAAC;MAC9E9D,UAAU,CAACyC,QAAQ,CAACG,IAAI,CAAC7C,OAAO,IAAI,4BAA4B,CAAC;MACjER,YAAY,CAACmE,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;MAC7C5D,aAAa,CAAC,IAAI,CAAC;MAEnB,MAAMV,IAAI,CAACqE,cAAc,CAACpE,QAAQ,CAAC;MACnCE,YAAY,CAACmE,OAAO,CAAC,kBAAkB,EAAErE,QAAQ,CAAC;MAClDiB,oBAAoB,CAACjB,QAAQ,CAAC;MAE9BmB,sBAAsB,CAAC,IAAI,CAAC;;MAE5B;MACAuC,UAAU,CAAC,MAAM;QACfQ,SAAS,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAAC;;MAIR;;MAEA;IAGF,CAAC,CAAC,OAAOV,KAAK,EAAE;MAAA,IAAAuB,gBAAA,EAAAC,qBAAA;MACd/E,WAAW,CAACe,iBAAiB,CAAC;MAC9BD,eAAe,CAACC,iBAAiB,CAAC;MAClCL,UAAU,CAAC,EAAAoE,gBAAA,GAAAvB,KAAK,CAACJ,QAAQ,cAAA2B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxB,IAAI,cAAAyB,qBAAA,uBAApBA,qBAAA,CAAsBtE,OAAO,KAAI,yBAAyB,CAAC;IACxE;EACF,CAAC;EAED,oBACEf,OAAA;IAAKsF,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBvF,OAAA;MAAIsF,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtB1E,UAAU,IAAI,CAACU,mBAAmB,GAC9BN,cAAc,IAAId,CAAC,CAAC,gBAAgB,CAAC,GACtCA,CAAC,CAAC,gBAAgB;IAAC;MAAAqF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEL3F,OAAA;MACEsF,SAAS,EAAC,uBAAuB;MACjCM,QAAQ,EAAGC,CAAC,IAAKrB,oBAAoB,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACtDA,KAAK,EAAE1F,QAAS;MAAAkF,QAAA,gBAEhBvF,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,SAAS;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC1C3F,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,SAAS;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC1C3F,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,OAAO;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACxC3F,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,YAAY;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC7C3F,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,SAAS;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC1C3F,OAAA;QAAQ+F,KAAK,EAAC,IAAI;QAAAR,QAAA,EAAEpF,CAAC,CAAC,QAAQ;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAET3F,OAAA;MAAKsF,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GACjClF,QAAQ,KAAK,IAAI,gBAChBL,OAAA;QACEsF,SAAS,EAAC,WAAW;QACrBU,IAAI,EAAC,OAAO;QACZ5C,WAAW,EAAEjD,CAAC,CAAC,YAAY,CAAE;QAC7B4F,KAAK,EAAEtF,aAAc;QACrBmF,QAAQ,EAAGC,CAAC,IAAKnF,gBAAgB,CAACmF,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,gBAEF3F,OAAA;QACEsF,SAAS,EAAC,WAAW;QACrBU,IAAI,EAAC,MAAM;QACX5C,WAAW,EAAEjD,CAAC,CAAC,aAAa,CAAE;QAC9B4F,KAAK,EAAEtF,aAAc;QACrBmF,QAAQ,EAAGC,CAAC,IAAKnF,gBAAgB,CAACmF,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACF,eACD3F,OAAA;QAAQsF,SAAS,EAAC,YAAY;QAACW,OAAO,EAAEtB,aAAc;QAAAY,QAAA,EACnDpF,CAAC,CAAC,SAAS;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL5E,OAAO,iBAAIf,OAAA;MAAGsF,SAAS,EAAE,eAAezE,UAAU,IAAI,CAACU,mBAAmB,GAAG,SAAS,GAAG,OAAO,EAAG;MAAAgE,QAAA,EAAExE;IAAO;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjHlF,aAAa,IAAI,CAACI,UAAU,iBAC3Bb,OAAA;MAAKsF,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCvF,OAAA;QACEsF,SAAS,EAAC,WAAW;QACrBU,IAAI,EAAC,MAAM;QACX5C,WAAW,EAAEjD,CAAC,CAAC,UAAU,CAAE;QAC3B4F,KAAK,EAAEpF,GAAI;QACXiF,QAAQ,EAAGC,CAAC,IAAKjF,MAAM,CAACiF,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACF3F,OAAA;QAAQsF,SAAS,EAAC,YAAY;QAACW,OAAO,EAAEd,eAAgB;QAAAI,QAAA,EACrDpF,CAAC,CAAC,WAAW;MAAC;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEA9E,UAAU,IAAI,CAACU,mBAAmB,iBACjCvB,OAAA;MAAGsF,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC/BtE,cAAc,IAAId,CAAC,CAAC,qBAAqB;IAAC;MAAAqF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACJ,EACApE,mBAAmB,iBAClBvB,OAAA;MAAGsF,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC/BpF,CAAC,CAAC,qBAAqB;IAAC;MAAAqF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAACzF,EAAA,CAtPID,YAAY;EAAA,QACIH,cAAc,EAajBF,WAAW;AAAA;AAAAsG,EAAA,GAdxBjG,YAAY;AAwPlB,eAAeA,YAAY;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}