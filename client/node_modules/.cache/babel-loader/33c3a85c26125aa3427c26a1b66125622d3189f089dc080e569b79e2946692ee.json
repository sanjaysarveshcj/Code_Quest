{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Askquestion\\\\Askquestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion } from \"../../action/question\";\nimport axios from \"axios\";\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Askquestion = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const handleSendOtp = async () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email\n      });\n      setOtpSent(true);\n      setMessage(response.data.message || \"OTP sent successfully!\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP.\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", {\n        email,\n        otp\n      });\n      setOtpVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  const handleVideoUpload = async videoFile => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 14 || currentHour > 19) {\n      throw new Error(\"Video uploads are allowed only between 2 PM and 7 PM.\");\n    }\n    if (!videoFile) {\n      alert(\"No video file selected!\");\n      throw new Error(\"No video file selected!\");\n      return;\n    }\n    if (videoFile.size > 50 * 1024 * 1024) {\n      alert(\"Video size exceeds 50MB.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"email\", email);\n    formData.append(\"otp\", otp);\n    console.log(\"Uploading video:\", formData.get(\"video\"));\n    try {\n      const response = await axios.post(\"http://localhost:5000/questions/upload-video\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      return response.data.videoPath;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to upload video.\");\n    }\n  };\n  const handlesubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    if (!user) {\n      alert(\"Login to ask a question\");\n      return;\n    }\n    if (!questionbody || !questiontitle || !questiontag) {\n      alert(\"Please enter all the fields\");\n      return;\n    }\n    if (!videoFile) {\n      alert(\"Please upload a video before posting your question.\");\n      return;\n    }\n    setIsSubmitting(true);\n    let videoPath = null;\n    if (videoFile) {\n      try {\n        videoPath = await handleVideoUpload(videoFile);\n      } catch (error) {\n        alert(error.message);\n        setIsSubmitting(false);\n        return;\n      }\n    }\n    dispatch(askquestion({\n      questiontitle,\n      questionbody,\n      questiontag,\n      userposted: user.result.name,\n      video: videoPath\n    }, navigate));\n    setIsSubmitting(false);\n    alert(\"You have successfully posted a question\");\n  };\n  const handleenter = e => {\n    if (e.code === \"Enter\") {\n      setquestionbody(questionbody + \"\\n\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ask-question\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ask-ques-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('Ask a public Question')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlesubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: t('Title')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t(\"Be specific and imagine you're asking a question to another person\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-title\",\n              onChange: e => {\n                setquestiontitle(e.target.value);\n              },\n              placeholder: t(\"e.g. Is there an R function for finding the index of an element in a vector?\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: t('Body')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Include all the information someone would need to answer your question')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"ask-ques-body\",\n              onChange: e => {\n                setquestionbody(e.target.value);\n              },\n              cols: \"30\",\n              rows: \"10\",\n              onKeyDown: handleenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: t('Tags')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Add up to 5 tags to describe what your question is about')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-tags\",\n              onChange: e => {\n                setquestiontags(e.target.value.split(\",\"));\n              },\n              placeholder: t(\"e.g. (xml, typescript, wordpress)\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: t('Email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Enter your email to receive an OTP')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: t('Enter your email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSendOtp,\n            disabled: otpSent,\n            className: \"otp-btn\",\n            children: t('Send OTP')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"otp\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: t('OTP')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: t('Enter the OTP sent to your email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: otp,\n                onChange: e => setOtp(e.target.value),\n                placeholder: t('Enter OTP')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVerifyOtp,\n              disabled: otpVerified,\n              className: \"otp-btn\",\n              children: t('Verify OTP')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), otpVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-upload-section\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"video-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: t('Upload Video')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Upload a video file (Max: 50MB)')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"video/*\",\n              onChange: e => setVideoFile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: t('Review your question'),\n          className: \"review-btn\",\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Askquestion, \"LDFuIzCessodtccVdjPfHzml0Pk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useTranslation];\n});\n_c = Askquestion;\nexport default Askquestion;\nvar _c;\n$RefreshReg$(_c, \"Askquestion\");","map":{"version":3,"names":["React","useState","useNavigate","useSelector","useDispatch","askquestion","axios","useTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","Askquestion","_s","navigate","dispatch","user","state","currentuserreducer","questiontitle","setquestiontitle","questionbody","setquestionbody","questiontag","setquestiontags","email","setEmail","otp","setOtp","otpSent","setOtpSent","otpVerified","setOtpVerified","videoFile","setVideoFile","message","setMessage","isSubmitting","setIsSubmitting","t","handleSendOtp","alert","response","post","data","error","_error$response","_error$response$data","handleVerifyOtp","_error$response2","_error$response2$data","handleVideoUpload","currentHour","Date","getHours","Error","size","formData","FormData","append","console","log","get","headers","videoPath","_error$response3","_error$response3$data","handlesubmit","e","preventDefault","userposted","result","name","video","handleenter","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","target","value","placeholder","cols","rows","onKeyDown","split","onClick","disabled","accept","files","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Askquestion/Askquestion.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion } from \"../../action/question\";\nimport axios from \"axios\";\nimport { useTranslation } from 'react-i18next';\n\nconst Askquestion = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { t } = useTranslation();\n\n  const handleSendOtp = async () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\n      setOtpSent(true);\n      setMessage(response.data.message || \"OTP sent successfully!\");\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", { email, otp });\n      setOtpVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\n    }\n  };\n\n  const handleVideoUpload = async (videoFile) => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 14 || currentHour > 19) {\n      throw new Error(\"Video uploads are allowed only between 2 PM and 7 PM.\");\n    }\n\n\n    if (!videoFile) {\n      alert(\"No video file selected!\");\n      throw new Error(\"No video file selected!\");\n      return;\n    }\n  \n    if (videoFile.size > 50 * 1024 * 1024) {\n      alert(\"Video size exceeds 50MB.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"email\", email);\n    formData.append(\"otp\", otp);\n\n    console.log(\"Uploading video:\", formData.get(\"video\"));\n\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/questions/upload-video\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      return response.data.videoPath;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error.response?.data?.message || \"Failed to upload video.\");\n    }\n  };\n\n  const handlesubmit = async (e) => {\n    e.preventDefault();\n\n    if (isSubmitting) return;\n    if (!user) {\n      alert(\"Login to ask a question\");\n      return;\n    }\n\n    if (!questionbody || !questiontitle || !questiontag) {\n      alert(\"Please enter all the fields\");\n      return;\n    }\n\n    if (!videoFile) {\n      alert(\"Please upload a video before posting your question.\");\n      return;\n    }\n\n    setIsSubmitting(true);\n    let videoPath = null;\n\n    if (videoFile) {\n      try {\n        videoPath = await handleVideoUpload(videoFile); \n      } catch (error) {\n        alert(error.message);\n        setIsSubmitting(false);\n        return;\n      }\n    }\n\n    dispatch(\n      askquestion(\n        {\n          questiontitle,\n          questionbody,\n          questiontag,\n          userposted: user.result.name,\n          video: videoPath,\n        },\n        navigate\n      )\n    );\n\n    setIsSubmitting(false);\n    alert(\"You have successfully posted a question\");\n  };\n\n  const handleenter = (e) => {\n    if (e.code === \"Enter\") {\n      setquestionbody(questionbody + \"\\n\");\n    }\n  };\n\n  return (\n    <div className=\"ask-question\">\n      <div className=\"ask-ques-container\">\n        <h1>{t('Ask a public Question')}</h1>\n        <form onSubmit={handlesubmit}>\n          <div className=\"ask-form-container\">\n            <label htmlFor=\"ask-ques-title\">\n              <h4>{t('Title')}</h4>\n              <p>{t(\"Be specific and imagine you're asking a question to another person\")}</p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-title\"\n                onChange={(e) => {\n                  setquestiontitle(e.target.value);\n                }}\n                placeholder={t(\"e.g. Is there an R function for finding the index of an element in a vector?\")}\n              />\n            </label>\n            <label htmlFor=\"ask-ques-body\">\n              <h4>{t('Body')}</h4>\n              <p>{t('Include all the information someone would need to answer your question')}</p>\n              <textarea\n                id=\"ask-ques-body\"\n                onChange={(e) => {\n                  setquestionbody(e.target.value);\n                }}\n                cols=\"30\"\n                rows=\"10\"\n                onKeyDown={handleenter}\n              ></textarea>\n            </label>\n            <label htmlFor=\"ask-ques-tags\">\n              <h4>{t('Tags')}</h4>\n              <p>{t('Add up to 5 tags to describe what your question is about')}</p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-tags\"\n                onChange={(e) => {\n                  setquestiontags(e.target.value.split(\",\"));\n                }}\n                placeholder={t(\"e.g. (xml, typescript, wordpress)\")}\n              />\n            </label>\n          </div>\n\n          <div className=\"otp-section\">\n            <label htmlFor=\"email\">\n              <h4>{t('Email')}</h4>\n              <p>{t('Enter your email to receive an OTP')}</p>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder={t('Enter your email')}\n              />\n            </label>\n            <button\n              type=\"button\"\n              onClick={handleSendOtp}\n              disabled={otpSent}\n              className=\"otp-btn\"\n            >\n              {t('Send OTP')}\n            </button>\n            {otpSent && (\n              <>\n                <label htmlFor=\"otp\">\n                  <h4>{t('OTP')}</h4>\n                  <p>{t('Enter the OTP sent to your email')}</p>\n                  <input\n                    type=\"text\"\n                    value={otp}\n                    onChange={(e) => setOtp(e.target.value)}\n                    placeholder={t('Enter OTP')}\n                  />\n                </label>\n                <button\n                  type=\"button\"\n                  onClick={handleVerifyOtp}\n                  disabled={otpVerified}\n                  className=\"otp-btn\"\n                >\n                  {t('Verify OTP')}\n                </button>\n              </>\n            )}\n          </div>\n\n          {otpVerified && (\n            <div className=\"video-upload-section\">\n              <label htmlFor=\"video-upload\">\n                <h4>{t('Upload Video')}</h4>\n                <p>{t('Upload a video file (Max: 50MB)')}</p>\n                <input\n                  type=\"file\"\n                  accept=\"video/*\"\n                  onChange={(e) => setVideoFile(e.target.files[0])}\n                />\n              </label>\n            </div>\n          )}\n\n          <input\n            type=\"submit\"\n            value={t('Review your question')}\n            className=\"review-btn\"\n            disabled={isSubmitting}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Askquestion;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}