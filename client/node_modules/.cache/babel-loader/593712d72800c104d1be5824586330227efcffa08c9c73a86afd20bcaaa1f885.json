{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Auth.css\";\n// import { resetpassword } from \"../../api/index\";\n// import { useTranslation } from 'react-i18next';\n\n// const ResetPassword = () => {\n//     const [emailOrPhone, setEmailOrPhone] = useState(\"\");\n//     const [otp, setOtp] = useState(\"\");\n//     const [step, setStep] = useState(1);\n//     const [message, setMessage] = useState(\"\");\n//     const navigate = useNavigate();\n//     const { t } = useTranslation();\n\n//     const handleRequestOtp = async (e) => {\n//         e.preventDefault();\n//         setMessage(\"\");\n//         try {\n//             const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\n//             setMessage(response.data.message);\n//             setStep(2); \n//         } catch (error) {\n//             setMessage(error.response?.data?.message || \"Something went wrong\");\n//         }\n//     };\n\n//     const handleVerifyOtp = async (e) => {\n//         e.preventDefault();\n//         setMessage(\"\");\n//         try {\n//             const response = await axios.post(\"http://localhost:5000/api/verify-otp\", { email, otp });\n//             setMessage(response.data.message);\n//             if (response.data.success) {\n//                 alert(\"A new password has been sent to your email.\");\n//                 navigate(\"/login\"); // Redirect to login page after password reset\n//             }\n//         } catch (error) {\n//             setMessage(error.response?.data?.message || \"Invalid OTP, try again\");\n//         }\n//     };\n\n//     const handleResetPassword = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await resetpassword(emailOrPhone);\n//             setMessage(response.data.message);\n//         } catch (error) {\n//             setMessage(error.response?.data?.message || \"Something went wrong\");\n//         }\n//     };\n\n//     return (\n//         <section className=\"auth-section\">\n//             <div className=\"auth-container-2\">\n//                 <h1>{t('Reset Password')}</h1>\n//                 {step === 1 ? (\n//                     <form onSubmit={handleRequestOtp}>\n//                         <label htmlFor=\"email\">\n//                             <h4>{t(\"Enter Email\")}</h4>\n//                             <input\n//                                 type=\"email\"\n//                                 id=\"email\"\n//                                 name=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmailOrPhone(e.target.value)}\n//                                 required\n//                             />\n//                         </label>\n//                         <button type=\"submit\" className=\"auth-btn\">\n//                             {t(\"Send OTP\")}\n//                         </button>\n//                     </form>\n//                 ) : (\n//                     <form onSubmit={handleVerifyOtp}>\n//                         <label htmlFor=\"otp\">\n//                             <h4>{t(\"Enter OTP\")}</h4>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"otp\"\n//                                 name=\"otp\"\n//                                 value={otp}\n//                                 onChange={(e) => setOtp(e.target.value)}\n//                                 required\n//                             />\n//                         </label>\n//                         <button type=\"submit\" className=\"auth-btn\">\n//                             {t(\"Verify OTP & Reset Password\")}\n//                         </button>\n//                     </form>\n//                 )}\n//                 {/* <form onSubmit={handleResetPassword}>\n//                     <label htmlFor=\"emailOrPhone\">\n//                         <h4>{t('Email or Phone')}</h4>\n//                         <input\n//                             type=\"text\"\n//                             id=\"emailOrPhone\"\n//                             name=\"emailOrPhone\"\n//                             value={emailOrPhone}\n//                             onChange={(e) => setEmailOrPhone(e.target.value)}\n//                         />\n//                     </label>\n//                     <button type=\"submit\" className=\"auth-btn\">\n//                         {t('Reset Password')}\n//                     </button>\n//                 </form> */}\n//                 {message && <p>{t(message)}</p>}\n//             </div>\n//         </section>\n//     );\n//     };    \n\n// export default ResetPassword;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Auth.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n\n  // Step 1: Send OTP\n  const handleRequestOtp = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email\n      });\n      setMessage(response.data.message);\n      setStep(2);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\");\n    }\n  };\n\n  // Step 2: Verify OTP & Get New Password\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", {\n        email,\n        otp\n      });\n      setMessage(response.data.message);\n      if (response.data.success) {\n        alert(\"Your new password has been sent to your email.\");\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid OTP, try again\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"auth-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t(\"Reset Password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRequestOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t(\"Enter Email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: t(\"Send OTP\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleVerifyOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"otp\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t(\"Enter OTP\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"otp\",\n            name: \"otp\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: t(\"Verify OTP & Get New Password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"2qUKZ+AiMcSGz4TUR2amp/Ntlkw=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","axios","useTranslation","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","otp","setOtp","step","setStep","message","setMessage","navigate","t","handleRequestOtp","e","preventDefault","response","post","data","error","_error$response","_error$response$data","handleVerifyOtp","success","alert","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Auth/ResetPassword.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Auth.css\";\r\n// import { resetpassword } from \"../../api/index\";\r\n// import { useTranslation } from 'react-i18next';\r\n\r\n\r\n// const ResetPassword = () => {\r\n//     const [emailOrPhone, setEmailOrPhone] = useState(\"\");\r\n//     const [otp, setOtp] = useState(\"\");\r\n//     const [step, setStep] = useState(1);\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n//     const { t } = useTranslation();\r\n\r\n//     const handleRequestOtp = async (e) => {\r\n//         e.preventDefault();\r\n//         setMessage(\"\");\r\n//         try {\r\n//             const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\r\n//             setMessage(response.data.message);\r\n//             setStep(2); \r\n//         } catch (error) {\r\n//             setMessage(error.response?.data?.message || \"Something went wrong\");\r\n//         }\r\n//     };\r\n\r\n//     const handleVerifyOtp = async (e) => {\r\n//         e.preventDefault();\r\n//         setMessage(\"\");\r\n//         try {\r\n//             const response = await axios.post(\"http://localhost:5000/api/verify-otp\", { email, otp });\r\n//             setMessage(response.data.message);\r\n//             if (response.data.success) {\r\n//                 alert(\"A new password has been sent to your email.\");\r\n//                 navigate(\"/login\"); // Redirect to login page after password reset\r\n//             }\r\n//         } catch (error) {\r\n//             setMessage(error.response?.data?.message || \"Invalid OTP, try again\");\r\n//         }\r\n//     };\r\n\r\n//     const handleResetPassword = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await resetpassword(emailOrPhone);\r\n//             setMessage(response.data.message);\r\n//         } catch (error) {\r\n//             setMessage(error.response?.data?.message || \"Something went wrong\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <section className=\"auth-section\">\r\n//             <div className=\"auth-container-2\">\r\n//                 <h1>{t('Reset Password')}</h1>\r\n//                 {step === 1 ? (\r\n//                     <form onSubmit={handleRequestOtp}>\r\n//                         <label htmlFor=\"email\">\r\n//                             <h4>{t(\"Enter Email\")}</h4>\r\n//                             <input\r\n//                                 type=\"email\"\r\n//                                 id=\"email\"\r\n//                                 name=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={(e) => setEmailOrPhone(e.target.value)}\r\n//                                 required\r\n//                             />\r\n//                         </label>\r\n//                         <button type=\"submit\" className=\"auth-btn\">\r\n//                             {t(\"Send OTP\")}\r\n//                         </button>\r\n//                     </form>\r\n//                 ) : (\r\n//                     <form onSubmit={handleVerifyOtp}>\r\n//                         <label htmlFor=\"otp\">\r\n//                             <h4>{t(\"Enter OTP\")}</h4>\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"otp\"\r\n//                                 name=\"otp\"\r\n//                                 value={otp}\r\n//                                 onChange={(e) => setOtp(e.target.value)}\r\n//                                 required\r\n//                             />\r\n//                         </label>\r\n//                         <button type=\"submit\" className=\"auth-btn\">\r\n//                             {t(\"Verify OTP & Reset Password\")}\r\n//                         </button>\r\n//                     </form>\r\n//                 )}\r\n//                 {/* <form onSubmit={handleResetPassword}>\r\n//                     <label htmlFor=\"emailOrPhone\">\r\n//                         <h4>{t('Email or Phone')}</h4>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"emailOrPhone\"\r\n//                             name=\"emailOrPhone\"\r\n//                             value={emailOrPhone}\r\n//                             onChange={(e) => setEmailOrPhone(e.target.value)}\r\n//                         />\r\n//                     </label>\r\n//                     <button type=\"submit\" className=\"auth-btn\">\r\n//                         {t('Reset Password')}\r\n//                     </button>\r\n//                 </form> */}\r\n//                 {message && <p>{t(message)}</p>}\r\n//             </div>\r\n//         </section>\r\n//     );\r\n//     };    \r\n\r\n// export default ResetPassword;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Auth.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ResetPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [step, setStep] = useState(1);\r\n    const [message, setMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    // Step 1: Send OTP\r\n    const handleRequestOtp = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\r\n            setMessage(response.data.message);\r\n            setStep(2);\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || \"Something went wrong\");\r\n        }\r\n    };\r\n\r\n    // Step 2: Verify OTP & Get New Password\r\n    const handleVerifyOtp = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/api/verify-otp\", { email, otp });\r\n            setMessage(response.data.message);\r\n            if (response.data.success) {\r\n                alert(\"Your new password has been sent to your email.\");\r\n                navigate(\"/login\");\r\n            }\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || \"Invalid OTP, try again\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"auth-section\">\r\n            <div className=\"auth-container-2\">\r\n                <h1>{t(\"Reset Password\")}</h1>\r\n\r\n                {step === 1 ? (\r\n                    <form onSubmit={handleRequestOtp}>\r\n                        <label htmlFor=\"email\">\r\n                            <h4>{t(\"Enter Email\")}</h4>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"auth-btn\">\r\n                            {t(\"Send OTP\")}\r\n                        </button>\r\n                    </form>\r\n                ) : (\r\n                    <form onSubmit={handleVerifyOtp}>\r\n                        <label htmlFor=\"otp\">\r\n                            <h4>{t(\"Enter OTP\")}</h4>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"otp\"\r\n                                name=\"otp\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"auth-btn\">\r\n                            {t(\"Verify OTP & Get New Password\")}\r\n                        </button>\r\n                    </form>\r\n                )}\r\n\r\n                {message && <p>{t(message)}</p>}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB;EAAE,CAAC,GAAGd,cAAc,CAAC,CAAC;;EAE9B;EACA,MAAMe,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE;QAAEd;MAAM,CAAC,CAAC;MAClFO,UAAU,CAACM,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC;MACjCD,OAAO,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOW,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZX,UAAU,CAAC,EAAAU,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBZ,OAAO,KAAI,sBAAsB,CAAC;IACvE;EACJ,CAAC;;EAED;EACA,MAAMa,eAAe,GAAG,MAAOR,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,sCAAsC,EAAE;QAAEd,KAAK;QAAEE;MAAI,CAAC,CAAC;MACzFK,UAAU,CAACM,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC;MACjC,IAAIO,QAAQ,CAACE,IAAI,CAACK,OAAO,EAAE;QACvBC,KAAK,CAAC,gDAAgD,CAAC;QACvDb,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA;MACZhB,UAAU,CAAC,EAAAe,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBjB,OAAO,KAAI,wBAAwB,CAAC;IACzE;EACJ,CAAC;EAED,oBACIT,OAAA;IAAS2B,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC7B5B,OAAA;MAAK2B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B5B,OAAA;QAAA4B,QAAA,EAAKhB,CAAC,CAAC,gBAAgB;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAE7BzB,IAAI,KAAK,CAAC,gBACPP,OAAA;QAAMiC,QAAQ,EAAEpB,gBAAiB;QAAAe,QAAA,gBAC7B5B,OAAA;UAAOkC,OAAO,EAAC,OAAO;UAAAN,QAAA,gBAClB5B,OAAA;YAAA4B,QAAA,EAAKhB,CAAC,CAAC,aAAa;UAAC;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BhC,OAAA;YACImC,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEnC,KAAM;YACboC,QAAQ,EAAGzB,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRhC,OAAA;UAAQmC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,UAAU;UAAAC,QAAA,EACrChB,CAAC,CAAC,UAAU;QAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,gBAEPhC,OAAA;QAAMiC,QAAQ,EAAEX,eAAgB;QAAAM,QAAA,gBAC5B5B,OAAA;UAAOkC,OAAO,EAAC,KAAK;UAAAN,QAAA,gBAChB5B,OAAA;YAAA4B,QAAA,EAAKhB,CAAC,CAAC,WAAW;UAAC;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBhC,OAAA;YACImC,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,KAAK;YACRC,IAAI,EAAC,KAAK;YACVC,KAAK,EAAEjC,GAAI;YACXkC,QAAQ,EAAGzB,CAAC,IAAKR,MAAM,CAACQ,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YACxCG,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRhC,OAAA;UAAQmC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,UAAU;UAAAC,QAAA,EACrChB,CAAC,CAAC,+BAA+B;QAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACT,EAEAvB,OAAO,iBAAIT,OAAA;QAAA4B,QAAA,EAAIhB,CAAC,CAACH,OAAO;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAC9B,EAAA,CAlFID,aAAa;EAAA,QAKEL,WAAW,EACdE,cAAc;AAAA;AAAA4C,EAAA,GAN1BzC,aAAa;AAoFnB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}