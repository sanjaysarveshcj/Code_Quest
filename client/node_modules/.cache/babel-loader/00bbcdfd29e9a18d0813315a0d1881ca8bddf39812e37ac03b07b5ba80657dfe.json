{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport i18n from \"./i18n\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const [language, setLanguage] = useState(\"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const handleLanguageChange = async lang => {\n    setLanguage(lang);\n    i18n.changeLanguage(lang);\n    if (lang === \"fr\") {\n      // Email-based OTP\n      const email = prompt(\"Enter your email address:\");\n      setEmailOrMobile(email);\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email,\n        method: \"email\"\n      });\n      alert(response.data.message);\n    } else {\n      // Mobile-based OTP\n      const mobile = prompt(\"Enter your mobile number:\");\n      setEmailOrMobile(mobile);\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        mobile,\n        method: \"mobile\"\n      });\n      alert(response.data.message);\n    }\n  };\n  const verifyOtp = async () => {\n    const response = await axios.post(\"http://localhost:5000/api/verify-otp\", {\n      identifier: emailOrMobile,\n      otp\n    });\n    if (response.data.success) {\n      setIsVerified(true);\n      alert(\"Language switched successfully!\");\n    } else {\n      alert(\"OTP verification failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: i18n.t(\"welcome_message\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: \"Portuguese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), emailOrMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"tinI7gx7gqwCG1EOPcWIGz3kSqM=\");\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","i18n","axios","jsxDEV","_jsxDEV","Multilingual","_s","language","setLanguage","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","handleLanguageChange","lang","changeLanguage","email","prompt","response","post","method","alert","data","message","mobile","verifyOtp","identifier","success","children","t","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport i18n from \"./i18n\";\r\nimport axios from \"axios\";\r\n\r\nconst Multilingual = () => {\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n\r\n  const handleLanguageChange = async (lang) => {\r\n    setLanguage(lang);\r\n    i18n.changeLanguage(lang);\r\n\r\n    if (lang === \"fr\") {\r\n      // Email-based OTP\r\n      const email = prompt(\"Enter your email address:\");\r\n      setEmailOrMobile(email);\r\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\r\n        email,\r\n        method: \"email\",\r\n      });\r\n      alert(response.data.message);\r\n    } else {\r\n      // Mobile-based OTP\r\n      const mobile = prompt(\"Enter your mobile number:\");\r\n      setEmailOrMobile(mobile);\r\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\r\n        mobile,\r\n        method: \"mobile\",\r\n      });\r\n      alert(response.data.message);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    const response = await axios.post(\"http://localhost:5000/api/verify-otp\", {\r\n      identifier: emailOrMobile,\r\n      otp,\r\n    });\r\n    if (response.data.success) {\r\n      setIsVerified(true);\r\n      alert(\"Language switched successfully!\");\r\n    } else {\r\n      alert(\"OTP verification failed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{i18n.t(\"welcome_message\")}</h1>\r\n      <select onChange={(e) => handleLanguageChange(e.target.value)} value={language}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"es\">Spanish</option>\r\n        <option value=\"hi\">Hindi</option>\r\n        <option value=\"pt\">Portuguese</option>\r\n        <option value=\"zh\">Chinese</option>\r\n        <option value=\"fr\">French</option>\r\n      </select>\r\n\r\n      {emailOrMobile && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}