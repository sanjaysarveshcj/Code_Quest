{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const [language, setLanguage] = useState(\"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleLanguageChange = async lang => {\n    setLanguage(lang);\n    if (isVerified) {\n      await translatePage(lang);\n    }\n    if (lang === \"fr\") {\n      if (!emailOrMobile) {\n        alert(\"Please enter your email.\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n          email: emailOrMobile\n        });\n        setMessage(response.data.message || \"OTP sent successfully!\");\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP.\");\n      }\n    } else {\n      const mobile = prompt(\"Enter your mobile number(with code):\");\n      if (!mobile) {\n        alert(\"Mobile number is required.\");\n        return;\n      }\n      setEmailOrMobile(mobile);\n      try {\n        const response = await axios.post(\"http://localhost:5000/useer/send-otp-mobile\", {\n          mobile\n        });\n        setMessage(response.data.message || \"OTP sent successfully via Twilio!\");\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to send OTP via Twilio.\");\n      }\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const payload = language === \"fr\" ? {\n        email: emailOrMobile,\n        otp\n      } : {\n        mobile: emailOrMobile,\n        otp\n      };\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", payload);\n      setIsVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n      await translatePage(language);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the OTP verification system\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: \"Portuguese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), language === \"fr\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLanguageChange(\"fr\"),\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), emailOrMobile && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), isVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Verification successful! You are authenticated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"NS/uJ5gYo/BQJftTUo2xWrf39bI=\");\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Multilingual","_s","language","setLanguage","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","message","setMessage","handleLanguageChange","lang","translatePage","alert","response","post","email","data","error","_error$response","_error$response$data","mobile","prompt","_error$response2","_error$response2$data","handleVerifyOtp","payload","_error$response3","_error$response3$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Multilingual = () => {\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleLanguageChange = async (lang) => {\r\n    setLanguage(lang);\r\n    if (isVerified) {\r\n      await translatePage(lang);\r\n    }\r\n\r\n    if (lang === \"fr\") {\r\n      if (!emailOrMobile) {\r\n        alert(\"Please enter your email.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email: emailOrMobile });\r\n        setMessage(response.data.message || \"OTP sent successfully!\");\r\n      } catch (error) {\r\n        setMessage(error.response?.data?.message || \"Failed to send OTP.\");\r\n      }\r\n    } else {\r\n      const mobile = prompt(\"Enter your mobile number(with code):\");\r\n      if (!mobile) {\r\n        alert(\"Mobile number is required.\");\r\n        return;\r\n      }\r\n\r\n      setEmailOrMobile(mobile);\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/useer/send-otp-mobile\", {\r\n          mobile,\r\n        });\r\n        setMessage(response.data.message || \"OTP sent successfully via Twilio!\");\r\n      } catch (error) {\r\n        setMessage(error.response?.data?.message || \"Failed to send OTP via Twilio.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(\"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload =\r\n        language === \"fr\"\r\n          ? { email: emailOrMobile, otp } \r\n          : { mobile: emailOrMobile, otp }; \r\n\r\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", payload);\r\n\r\n      setIsVerified(true);\r\n      setMessage(response.data.message || \"OTP verified successfully!\");\r\n      await translatePage(language);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the OTP verification system</h1>\r\n      <select onChange={(e) => handleLanguageChange(e.target.value)} value={language}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"es\">Spanish</option>\r\n        <option value=\"hi\">Hindi</option>\r\n        <option value=\"pt\">Portuguese</option>\r\n        <option value=\"zh\">Chinese</option>\r\n        <option value=\"fr\">French</option>\r\n      </select>\r\n\r\n      {language === \"fr\" && (\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={emailOrMobile}\r\n            onChange={(e) => setEmailOrMobile(e.target.value)}\r\n          />\r\n          <button onClick={() => handleLanguageChange(\"fr\")}>Send OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      {emailOrMobile && !isVerified && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {isVerified && <p>Verification successful! You are authenticated.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}