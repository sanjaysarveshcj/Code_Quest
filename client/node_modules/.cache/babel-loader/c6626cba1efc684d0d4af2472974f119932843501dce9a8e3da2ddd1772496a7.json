{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\chatbot\\\\chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const handleSendOtp = async () => {\n    if (!email) {\n      setMessage(\"Please enter your email.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email\n      });\n      setMessage(response.data.message);\n      setOtpSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP. Please try again.\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setMessage(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      setVerified(true);\n      setMessage(\"OTP verified! You can now ask questions.\");\n    } catch (error) {\n      setMessage(\"Invalid OTP. Please try again.\");\n    }\n  };\n  const handleAskQuestion = async () => {\n    if (!verified) {\n      setMessage(\"Please verify OTP before asking a question.\");\n      return;\n    }\n    if (!question) {\n      setMessage(\"Please enter a question.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/chatbot\", {\n        email,\n        otp,\n        question\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chatbot-title\",\n      children: \"Chatbot with OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"chatbot-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        className: \"chatbot-button\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : !verified ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        className: \"chatbot-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        className: \"chatbot-button\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask your programming question...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        className: \"chatbot-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAskQuestion,\n        className: \"chatbot-button\",\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chatbot-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"tcwysa1RMhK7Iwhkb0LW9K3nNGE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","email","setEmail","otp","setOtp","question","setQuestion","message","setMessage","otpSent","setOtpSent","verified","setVerified","handleSendOtp","response","post","data","error","_error$response","_error$response$data","handleVerifyOtp","handleAskQuestion","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/chatbot/chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setMessage(\"Please enter your email.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\r\n      setMessage(response.data.message);\r\n      setOtpSent(true);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Failed to send OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      setMessage(\"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setVerified(true);\r\n      setMessage(\"OTP verified! You can now ask questions.\");\r\n    } catch (error) {\r\n      setMessage(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleAskQuestion = async () => {\r\n    if (!verified) {\r\n      setMessage(\"Please verify OTP before asking a question.\");\r\n      return;\r\n    }\r\n\r\n    if (!question) {\r\n      setMessage(\"Please enter a question.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/chatbot\", {\r\n        email,\r\n        otp,\r\n        question,\r\n      });\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2 className=\"chatbot-title\">Chatbot with OTP Verification</h2>\r\n\r\n      {!otpSent ? (\r\n        <div className=\"chatbot-form\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"chatbot-input\"\r\n          />\r\n          <button onClick={handleSendOtp} className=\"chatbot-button\">\r\n            Send OTP\r\n          </button>\r\n        </div>\r\n      ) : !verified ? (\r\n        <div className=\"chatbot-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            className=\"chatbot-input\"\r\n          />\r\n          <button onClick={handleVerifyOtp} className=\"chatbot-button\">\r\n            Verify OTP\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chatbot-form\">\r\n          <textarea\r\n            placeholder=\"Ask your programming question...\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n            className=\"chatbot-textarea\"\r\n          />\r\n          <button onClick={handleAskQuestion} className=\"chatbot-button\">\r\n            Ask Question\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {message && <p className=\"chatbot-message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACZ,KAAK,EAAE;MACVO,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,oCAAoC,EAAE;QAAEd;MAAM,CAAC,CAAC;MAClFO,UAAU,CAACM,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC;MACjCG,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdX,UAAU,CAAC,EAAAU,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBZ,OAAO,KAAI,uCAAuC,CAAC;IACtF;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACjB,GAAG,EAAE;MACRK,UAAU,CAAC,uBAAuB,CAAC;MACnC;IACF;IAEA,IAAI;MACFI,WAAW,CAAC,IAAI,CAAC;MACjBJ,UAAU,CAAC,0CAA0C,CAAC;IACxD,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdT,UAAU,CAAC,gCAAgC,CAAC;IAC9C;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACV,QAAQ,EAAE;MACbH,UAAU,CAAC,6CAA6C,CAAC;MACzD;IACF;IAEA,IAAI,CAACH,QAAQ,EAAE;MACbG,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,mCAAmC,EAAE;QACrEd,KAAK;QACLE,GAAG;QACHE;MACF,CAAC,CAAC;MACFG,UAAU,CAACM,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;MAAA,IAAAK,gBAAA,EAAAC,qBAAA;MACdf,UAAU,CAAC,EAAAc,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,mCAAmC,CAAC;IAClF;EACF,CAAC;EAED,oBACET,OAAA;IAAK0B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC3B,OAAA;MAAI0B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/D,CAACpB,OAAO,gBACPX,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3B,OAAA;QACEgC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE/B,KAAM;QACbgC,QAAQ,EAAGC,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CR,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF/B,OAAA;QAAQsC,OAAO,EAAEvB,aAAc;QAACW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,GACJ,CAAClB,QAAQ,gBACXb,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE7B,GAAI;QACX8B,QAAQ,EAAGC,CAAC,IAAK9B,MAAM,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCR,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF/B,OAAA;QAAQsC,OAAO,EAAEhB,eAAgB;QAACI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAEN/B,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3B,OAAA;QACEiC,WAAW,EAAC,kCAAkC;QAC9CC,KAAK,EAAE3B,QAAS;QAChB4B,QAAQ,EAAGC,CAAC,IAAK5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CR,SAAS,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF/B,OAAA;QAAQsC,OAAO,EAAEf,iBAAkB;QAACG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAtB,OAAO,iBAAIT,OAAA;MAAG0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAElB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3GID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA6Gb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}