{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Tags\\\\Taglist.jsx\";\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Taglist = ({\n  tag\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: tag.tagName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tag.tagDesc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Taglist;\nexport default Taglist;\nvar _c;\n$RefreshReg$(_c, \"Taglist\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","Taglist","tag","className","children","tagName","fileName","_jsxFileName","lineNumber","columnNumber","tagDesc","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Tags/Taglist.jsx"],"sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next';\n\n\nconst Taglist = ({tag}) => {\n  return (\n    <div className=\"tag\">\n        <h5>{tag.tagName}</h5>\n        <p>{tag.tagDesc}</p>\n    </div>\n  )\n}\n\nexport default Taglist"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAG,CAAC,KAAK;EACzB,oBACEF,OAAA;IAAKG,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBJ,OAAA;MAAAI,QAAA,EAAKF,GAAG,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBT,OAAA;MAAAI,QAAA,EAAIF,GAAG,CAACQ;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAAE,EAAA,GAPKV,OAAO;AASb,eAAeA,OAAO;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}