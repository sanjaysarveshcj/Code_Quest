{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\chatbot\\\\chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      // Send question to backend\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: \"user@example.com\",\n          // Use logged-in email here\n          otp: \"123456\",\n          // Replace with the correct OTP\n          question: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.message,\n        sender: \"bot\"\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      const errorMessage = {\n        text: \"Error connecting to the chatbot!\",\n        sender: \"bot\"\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chatbot-input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-footer\",\n      children: \"Powered by AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","text","sender","response","fetch","method","headers","body","JSON","stringify","email","otp","question","data","json","botMessage","message","prevMessages","error","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/chatbot/chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    // Add user message\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      // Send question to backend\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: \"user@example.com\", // Use logged-in email here\r\n          otp: \"123456\", // Replace with the correct OTP\r\n          question: input,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { text: data.message, sender: \"bot\" };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      const errorMessage = { text: \"Error connecting to the chatbot!\", sender: \"bot\" };\r\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">Chatbot</div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.sender === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chatbot-input\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your question...\"\r\n        />\r\n        <button className=\"chatbot-button\" onClick={handleSend}>\r\n          Send\r\n        </button>\r\n      </div>\r\n      <div className=\"chatbot-footer\">Powered by AI</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}