{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Multilingual.css';\nimport { LanguageContext } from \"./LanguageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const {\n    language,\n    setLanguage,\n    translatePage\n  } = useContext(LanguageContext);\n  // const [language, setLanguage] = useState(\"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(null);\n  // const [selectedLang, setSelectedLang] = useState(null);\n  const location = useLocation();\n\n  //   const translatePage = async (lang, retryCount = 0) => {\n  //     setTranslatedText(\"Translating... Please wait ⏳\");\n  //     setSelectedLang(lang);\n\n  //     try {\n  //         console.log(`Requesting translation for: ${lang}`);\n\n  //         const elements = document.body.getElementsByTagName(\"*\");\n  //         let textNodes = [];\n\n  //         for (let i = 0; i < elements.length; i++) {\n  //             let element = elements[i];\n\n  //             for (let node of element.childNodes) {\n  //                 if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" &&\n  //                     window.getComputedStyle(element).display !== \"none\") {\n  //                     textNodes.push({ node, text: node.nodeValue.trim() });\n  //                 }\n  //             }\n\n  //             if (element.placeholder) {\n  //                 textNodes.push({ node: element, text: element.placeholder, isPlaceholder: true });\n  //             }\n  //         }\n\n  //         let texts = textNodes.map(item => item.text);\n  //         const response = await axios.post(\"http://localhost:5000/api/translate\", {\n  //             text: texts,\n  //             targetLang: lang,\n  //         });\n\n  //         console.log(\"Full Translation Response:\", response.data);\n\n  //         if (response.data?.error && response.data.error.includes(\"Model Helsinki-NLP\")) {\n  //             if (retryCount < 5) {\n  //                 console.log(`Retrying translation in 5 seconds... (${retryCount + 1}/5)`);\n  //                 setTimeout(() => translatePage(lang, retryCount + 1), 5000);\n  //             } else {\n  //                 setTranslatedText(\"Translation failed after multiple attempts.\");\n  //             }\n  //             return;\n  //         }\n\n  //         if (Array.isArray(response.data) && response.data.length === textNodes.length) {\n  //             textNodes.forEach((item, index) => {\n  //                 let translatedText = response.data[index]?.translation_text || item.text;\n  //                 if (item.isPlaceholder) {\n  //                     item.node.placeholder = translatedText;\n  //                 } else {\n  //                     item.node.nodeValue = translatedText;\n  //                 }\n  //             });\n\n  //             setTranslatedText(\"Translation successful ✅\");\n  //         } else {\n  //             console.error(\"Unexpected response format:\", response.data);\n  //             setTranslatedText(\"Translation failed. Unexpected response.\");\n  //         }\n  //     } catch (error) {\n  //         console.error(\"Translation Error:\", error.response?.data || error.message);\n  //         setTranslatedText(\"Translation failed. Please try again.\");\n  //     }\n  // };\n\n  // useEffect(() => {\n  //     const observer = new MutationObserver(() => {\n  //         if (selectedLang) {\n  //             translatePage(selectedLang);\n  //         }\n  //     });\n\n  //     observer.observe(document.body, { childList: true, subtree: true });\n\n  //     return () => observer.disconnect();\n  // }, [selectedLang]); \n\n  // useEffect(() => {\n  //   if (selectedLang) {\n  //     translatePage(selectedLang);\n  //   }\n  // }, [location.pathname]);\n\n  useEffect(() => {\n    translatePage(language);\n  }, [language]);\n  const handleLanguageChange = e => {\n    setLanguage(e.target.value);\n  };\n\n  // const handleLanguageChange = async (lang) => {\n  //   setLanguage(lang);\n  //   localStorage.setItem(\"selectedLanguage\", lang);\n  //   setTranslatedText(null);\n\n  //   if (isVerified) {\n  //     await translatePage(lang);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   const savedLanguage = localStorage.getItem(\"selectedLanguage\");\n  //   if (savedLanguage) {\n  //     setLanguage(savedLanguage);\n  //     setSelectedLang(savedLanguage);\n  //     translatePage(savedLanguage);  // Apply translation\n  //   }\n  // }, []);\n\n  const handleSendOtp = async () => {\n    if (!emailOrMobile) {\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile\n    } : {\n      mobile: emailOrMobile\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP.\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile,\n      otp\n    } : {\n      mobile: emailOrMobile,\n      otp\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setIsVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n      // await translatePage(language);\n\n      await translatePage(localStorage.getItem(\"selectedLanguage\") || language);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: translatedText || \"Welcome to the OTP verification system\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"otp-language-selector\",\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: \"Portuguese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-input-container\",\n      children: [language === \"fr\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: \"Enter your mobile number\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 3\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `otp-message ${isVerified ? \"success\" : \"error\"}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }, this), emailOrMobile && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-verification-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), isVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-success-message\",\n      children: translatedText || \"Verification successful! You are authenticated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"nC1IP9R/46Havnt1cdN5k66tG3c=\", false, function () {\n  return [useLocation];\n});\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","axios","LanguageContext","jsxDEV","_jsxDEV","Multilingual","_s","language","setLanguage","translatePage","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","message","setMessage","translatedText","setTranslatedText","location","handleLanguageChange","e","target","value","handleSendOtp","alert","endpoint","payload","email","mobile","response","post","data","error","_error$response","_error$response$data","handleVerifyOtp","localStorage","getItem","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Multilingual.css';\r\nimport { LanguageContext } from \"./LanguageContext\";\r\n\r\nconst Multilingual = () => {\r\n  const { language, setLanguage, translatePage } = useContext(LanguageContext);\r\n  // const [language, setLanguage] = useState(\"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [translatedText, setTranslatedText] = useState(null);\r\n  // const [selectedLang, setSelectedLang] = useState(null);\r\n  const location = useLocation();\r\n\r\n\r\n//   const translatePage = async (lang, retryCount = 0) => {\r\n//     setTranslatedText(\"Translating... Please wait ⏳\");\r\n//     setSelectedLang(lang);\r\n\r\n//     try {\r\n//         console.log(`Requesting translation for: ${lang}`);\r\n\r\n//         const elements = document.body.getElementsByTagName(\"*\");\r\n//         let textNodes = [];\r\n\r\n//         for (let i = 0; i < elements.length; i++) {\r\n//             let element = elements[i];\r\n\r\n//             for (let node of element.childNodes) {\r\n//                 if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" &&\r\n//                     window.getComputedStyle(element).display !== \"none\") {\r\n//                     textNodes.push({ node, text: node.nodeValue.trim() });\r\n//                 }\r\n//             }\r\n\r\n//             if (element.placeholder) {\r\n//                 textNodes.push({ node: element, text: element.placeholder, isPlaceholder: true });\r\n//             }\r\n//         }\r\n\r\n//         let texts = textNodes.map(item => item.text);\r\n//         const response = await axios.post(\"http://localhost:5000/api/translate\", {\r\n//             text: texts,\r\n//             targetLang: lang,\r\n//         });\r\n\r\n//         console.log(\"Full Translation Response:\", response.data);\r\n\r\n//         if (response.data?.error && response.data.error.includes(\"Model Helsinki-NLP\")) {\r\n//             if (retryCount < 5) {\r\n//                 console.log(`Retrying translation in 5 seconds... (${retryCount + 1}/5)`);\r\n//                 setTimeout(() => translatePage(lang, retryCount + 1), 5000);\r\n//             } else {\r\n//                 setTranslatedText(\"Translation failed after multiple attempts.\");\r\n//             }\r\n//             return;\r\n//         }\r\n\r\n//         if (Array.isArray(response.data) && response.data.length === textNodes.length) {\r\n//             textNodes.forEach((item, index) => {\r\n//                 let translatedText = response.data[index]?.translation_text || item.text;\r\n//                 if (item.isPlaceholder) {\r\n//                     item.node.placeholder = translatedText;\r\n//                 } else {\r\n//                     item.node.nodeValue = translatedText;\r\n//                 }\r\n//             });\r\n\r\n//             setTranslatedText(\"Translation successful ✅\");\r\n//         } else {\r\n//             console.error(\"Unexpected response format:\", response.data);\r\n//             setTranslatedText(\"Translation failed. Unexpected response.\");\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"Translation Error:\", error.response?.data || error.message);\r\n//         setTranslatedText(\"Translation failed. Please try again.\");\r\n//     }\r\n// };\r\n\r\n\r\n// useEffect(() => {\r\n//     const observer = new MutationObserver(() => {\r\n//         if (selectedLang) {\r\n//             translatePage(selectedLang);\r\n//         }\r\n//     });\r\n\r\n//     observer.observe(document.body, { childList: true, subtree: true });\r\n\r\n//     return () => observer.disconnect();\r\n// }, [selectedLang]); \r\n\r\n// useEffect(() => {\r\n//   if (selectedLang) {\r\n//     translatePage(selectedLang);\r\n//   }\r\n// }, [location.pathname]);\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  translatePage(language);\r\n}, [language]);\r\n\r\nconst handleLanguageChange = (e) => {\r\n  setLanguage(e.target.value);\r\n  \r\n};\r\n\r\n\r\n\r\n\r\n\r\n  // const handleLanguageChange = async (lang) => {\r\n  //   setLanguage(lang);\r\n  //   localStorage.setItem(\"selectedLanguage\", lang);\r\n  //   setTranslatedText(null);\r\n\r\n  //   if (isVerified) {\r\n  //     await translatePage(lang);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const savedLanguage = localStorage.getItem(\"selectedLanguage\");\r\n  //   if (savedLanguage) {\r\n  //     setLanguage(savedLanguage);\r\n  //     setSelectedLang(savedLanguage);\r\n  //     translatePage(savedLanguage);  // Apply translation\r\n  //   }\r\n  // }, []);\r\n\r\n  const handleSendOtp = async () => {\r\n    if (!emailOrMobile) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile } : { mobile: emailOrMobile };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile, otp } : { mobile: emailOrMobile, otp };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setIsVerified(true);\r\n      setMessage(response.data.message || \"OTP verified successfully!\");\r\n      // await translatePage(language);\r\n\r\n      await translatePage(localStorage.getItem(\"selectedLanguage\") || language);\r\n\r\n\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-page\">\r\n  <h1 className=\"otp-title\">{translatedText || \"Welcome to the OTP verification system\"}</h1>\r\n\r\n  <select\r\n    className=\"otp-language-selector\"\r\n    onChange={(e) => handleLanguageChange(e.target.value)}\r\n    value={language}\r\n  >\r\n    <option value=\"en\">English</option>\r\n    <option value=\"es\">Spanish</option>\r\n    <option value=\"hi\">Hindi</option>\r\n    <option value=\"pt\">Portuguese</option>\r\n    <option value=\"zh\">Chinese</option>\r\n    <option value=\"fr\">French</option>\r\n  </select>\r\n\r\n  <div className=\"otp-input-container\">\r\n    {language === \"fr\" ? (\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={emailOrMobile}\r\n        onChange={(e) => setEmailOrMobile(e.target.value)}\r\n      />\r\n    ) : (\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your mobile number\"\r\n        value={emailOrMobile}\r\n        onChange={(e) => setEmailOrMobile(e.target.value)}\r\n      />\r\n    )}\r\n    <button className=\"otp-button\" onClick={handleSendOtp}>\r\n      Send OTP\r\n    </button>\r\n  </div>\r\n\r\n  {message && <p className={`otp-message ${isVerified ? \"success\" : \"error\"}`}>{message}</p>}\r\n\r\n  {emailOrMobile && !isVerified && (\r\n    <div className=\"otp-verification-container\">\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter OTP\"\r\n        value={otp}\r\n        onChange={(e) => setOtp(e.target.value)}\r\n      />\r\n      <button className=\"otp-button\" onClick={handleVerifyOtp}>\r\n        Verify OTP\r\n      </button>\r\n    </div>\r\n  )}\r\n\r\n  {isVerified && (\r\n    <p className=\"otp-success-message\">\r\n      {translatedText || \"Verification successful! You are authenticated.\"}\r\n    </p>\r\n  )}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAGV,UAAU,CAACG,eAAe,CAAC;EAC5E;EACA,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1D;EACA,MAAMuB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAGhC;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAKAF,SAAS,CAAC,MAAM;IACdW,aAAa,CAACF,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,oBAAoB,GAAIC,CAAC,IAAK;IAClCd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE7B,CAAC;;EAMC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACf,aAAa,EAAE;MAClBgB,KAAK,CAACnB,QAAQ,KAAK,IAAI,GAAG,8BAA8B,GAAG,yCAAyC,CAAC;MACrG;IACF;IAEA,MAAMoB,QAAQ,GAAGpB,QAAQ,KAAK,IAAI,GAAG,eAAe,GAAG,uBAAuB;IAC9E,MAAMqB,OAAO,GAAGrB,QAAQ,KAAK,IAAI,GAAG;MAAEsB,KAAK,EAAEnB;IAAc,CAAC,GAAG;MAAEoB,MAAM,EAAEpB;IAAc,CAAC;IAExF,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,wBAAwBL,QAAQ,EAAE,EAAEC,OAAO,CAAC;MAC9EX,UAAU,CAACc,QAAQ,CAACE,IAAI,CAACjB,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOkB,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdnB,UAAU,CAAC,EAAAkB,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBpB,OAAO,KAAI,qBAAqB,CAAC;IACpE;EACF,CAAC;EAED,MAAMqB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACzB,GAAG,EAAE;MACRc,KAAK,CAACnB,QAAQ,KAAK,IAAI,GAAG,8BAA8B,GAAG,uBAAuB,CAAC;MACnF;IACF;IAEA,MAAMoB,QAAQ,GAAGpB,QAAQ,KAAK,IAAI,GAAG,iBAAiB,GAAG,yBAAyB;IAClF,MAAMqB,OAAO,GAAGrB,QAAQ,KAAK,IAAI,GAAG;MAAEsB,KAAK,EAAEnB,aAAa;MAAEE;IAAI,CAAC,GAAG;MAAEkB,MAAM,EAAEpB,aAAa;MAAEE;IAAI,CAAC;IAElG,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,wBAAwBL,QAAQ,EAAE,EAAEC,OAAO,CAAC;MAC9Eb,aAAa,CAAC,IAAI,CAAC;MACnBE,UAAU,CAACc,QAAQ,CAACE,IAAI,CAACjB,OAAO,IAAI,4BAA4B,CAAC;MACjE;;MAEA,MAAMP,aAAa,CAAC6B,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAIhC,QAAQ,CAAC;IAG3E,CAAC,CAAC,OAAO2B,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA;MACdxB,UAAU,CAAC,EAAAuB,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBzB,OAAO,KAAI,yBAAyB,CAAC;IACxE;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKsC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAC3BvC,OAAA;MAAIsC,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEzB,cAAc,IAAI;IAAwC;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE3F3C,OAAA;MACEsC,SAAS,EAAC,uBAAuB;MACjCM,QAAQ,EAAG1B,CAAC,IAAKD,oBAAoB,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACtDA,KAAK,EAAEjB,QAAS;MAAAoC,QAAA,gBAEhBvC,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnC3C,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnC3C,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjC3C,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC3C,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnC3C,OAAA;QAAQoB,KAAK,EAAC,IAAI;QAAAmB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAET3C,OAAA;MAAKsC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GACjCpC,QAAQ,KAAK,IAAI,gBAChBH,OAAA;QACEsC,SAAS,EAAC,WAAW;QACrBO,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9B1B,KAAK,EAAEd,aAAc;QACrBsC,QAAQ,EAAG1B,CAAC,IAAKX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,gBAEF3C,OAAA;QACEsC,SAAS,EAAC,WAAW;QACrBO,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,0BAA0B;QACtC1B,KAAK,EAAEd,aAAc;QACrBsC,QAAQ,EAAG1B,CAAC,IAAKX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACF,eACD3C,OAAA;QAAQsC,SAAS,EAAC,YAAY;QAACS,OAAO,EAAE1B,aAAc;QAAAkB,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL/B,OAAO,iBAAIZ,OAAA;MAAGsC,SAAS,EAAE,eAAe5B,UAAU,GAAG,SAAS,GAAG,OAAO,EAAG;MAAA6B,QAAA,EAAE3B;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzFrC,aAAa,IAAI,CAACI,UAAU,iBAC3BV,OAAA;MAAKsC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCvC,OAAA;QACEsC,SAAS,EAAC,WAAW;QACrBO,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvB1B,KAAK,EAAEZ,GAAI;QACXoC,QAAQ,EAAG1B,CAAC,IAAKT,MAAM,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACF3C,OAAA;QAAQsC,SAAS,EAAC,YAAY;QAACS,OAAO,EAAEd,eAAgB;QAAAM,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAjC,UAAU,iBACTV,OAAA;MAAGsC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC/BzB,cAAc,IAAI;IAAiD;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGN,CAAC;AAACzC,EAAA,CA3OID,YAAY;EAAA,QASCL,WAAW;AAAA;AAAAoD,EAAA,GATxB/C,YAAY;AA6OlB,eAAeA,YAAY;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}