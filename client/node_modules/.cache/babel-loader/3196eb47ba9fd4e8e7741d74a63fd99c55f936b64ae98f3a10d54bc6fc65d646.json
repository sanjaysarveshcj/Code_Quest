{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport { resetpassword } from \"../../api/index\";\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [emailOrPhone, setEmailOrPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await resetpassword(emailOrPhone);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"auth-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('Reset Password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"95udJTeVmCYnwKmhLxjzuiy5g7g=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","resetpassword","useTranslation","jsxDEV","_jsxDEV","ResetPassword","_s","emailOrPhone","setEmailOrPhone","message","setMessage","navigate","t","handleResetPassword","e","preventDefault","response","data","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\nimport { resetpassword } from \"../../api/index\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const [emailOrPhone, setEmailOrPhone] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await resetpassword(emailOrPhone);\r\n            setMessage(response.data.message);\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || \"Something went wrong\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"auth-section\">\r\n            <div className=\"auth-container-2\">\r\n                <h1>{t('Reset Password')}</h1>\r\n                \r\n                {/* <form onSubmit={handleResetPassword}>\r\n                    <label htmlFor=\"emailOrPhone\">\r\n                        <h4>{t('Email or Phone')}</h4>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"emailOrPhone\"\r\n                            name=\"emailOrPhone\"\r\n                            value={emailOrPhone}\r\n                            onChange={(e) => setEmailOrPhone(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className=\"auth-btn\">\r\n                        {t('Reset Password')}\r\n                    </button>\r\n                </form> */}\r\n                {message && <p>{t(message)}</p>}\r\n            </div>\r\n        </section>\r\n    );\r\n    };    \r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AACnB,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAE,CAAC,GAAGV,cAAc,CAAC,CAAC;EAG9B,MAAMW,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMf,aAAa,CAACM,YAAY,CAAC;MAClDG,UAAU,CAACM,QAAQ,CAACC,IAAI,CAACR,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZV,UAAU,CAAC,EAAAS,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBX,OAAO,KAAI,sBAAsB,CAAC;IACvE;EACJ,CAAC;EAED,oBACIL,OAAA;IAASiB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC7BlB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAKV,CAAC,CAAC,gBAAgB;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAiB7BjB,OAAO,iBAAIL,OAAA;QAAAkB,QAAA,EAAIV,CAAC,CAACH,OAAO;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACpB,EAAA,CAzCAD,aAAa;EAAA,QAGEL,WAAW,EACdE,cAAc;AAAA;AAAAyB,EAAA,GAJ1BtB,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}