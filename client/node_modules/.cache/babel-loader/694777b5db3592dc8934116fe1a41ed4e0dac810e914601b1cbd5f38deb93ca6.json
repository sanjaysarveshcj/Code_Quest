{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\Comnponent\\\\chatbot\\\\chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); // Only for demonstration; usually, email comes from user authentication\n  const [otp, setOtp] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [chatbotAnswer, setChatbotAnswer] = useState(\"\");\n\n  // Handle OTP generation\n  const handleGenerateOtp = async () => {\n    setLoading(true);\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n    try {\n      // Call API to generate OTP\n      const {\n        data\n      } = await axios.post(\"/api/send-otp\", {}); // Replace with the correct endpoint\n      setSuccessMessage(data.message);\n      setOtpSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle chatbot question submission\n  const handleSubmit = async () => {\n    if (!otp || !question) {\n      setErrorMessage(\"Please enter the OTP and your question.\");\n      return;\n    }\n    setLoading(true);\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n    try {\n      // Send the OTP, email, and question to the backend\n      const {\n        data\n      } = await axios.post(\"/api/chatbot\", {\n        otp,\n        question\n      });\n      setChatbotAnswer(data.answer); // Assuming the response contains the chatbot's answer\n      setSuccessMessage(\"Chatbot responded successfully!\");\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setErrorMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to get chatbot response. Try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    style: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Your email (optional if already logged in)\",\n        style: {\n          margin: \"10px 0\",\n          padding: \"5px\",\n          width: \"80%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateOtp,\n        disabled: loading || otpSent,\n        children: loading ? \"Sending OTP...\" : otpSent ? \"OTP Sent\" : \"Generate OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"OTP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter the OTP\",\n          style: {\n            margin: \"10px 0\",\n            padding: \"5px\",\n            width: \"80%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask the chatbot a question\",\n          style: {\n            margin: \"10px 0\",\n            padding: \"5px\",\n            width: \"80%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? \"Loading...\" : \"Ask Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 26\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this), chatbotAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Chatbot Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 28\n      }, this), \" \", chatbotAnswer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"rybXZQzDAyIfZ9i46hwYD5JTUZ0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","email","setEmail","otp","setOtp","question","setQuestion","otpSent","setOtpSent","loading","setLoading","successMessage","setSuccessMessage","errorMessage","setErrorMessage","chatbotAnswer","setChatbotAnswer","handleGenerateOtp","data","post","message","error","_error$response","_error$response$data","response","handleSubmit","answer","_error$response2","_error$response2$data","className","style","maxWidth","margin","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","padding","width","onClick","disabled","color","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/Comnponent/chatbot/chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatbot = () => {\r\n  const [email, setEmail] = useState(\"\"); // Only for demonstration; usually, email comes from user authentication\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [chatbotAnswer, setChatbotAnswer] = useState(\"\");\r\n\r\n  // Handle OTP generation\r\n  const handleGenerateOtp = async () => {\r\n    setLoading(true);\r\n    setSuccessMessage(\"\");\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      // Call API to generate OTP\r\n      const { data } = await axios.post(\"/api/send-otp\", {}); // Replace with the correct endpoint\r\n      setSuccessMessage(data.message);\r\n      setOtpSent(true);\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        error.response?.data?.message || \"Failed to send OTP. Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle chatbot question submission\r\n  const handleSubmit = async () => {\r\n    if (!otp || !question) {\r\n      setErrorMessage(\"Please enter the OTP and your question.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setSuccessMessage(\"\");\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      // Send the OTP, email, and question to the backend\r\n      const { data } = await axios.post(\"/api/chatbot\", { otp, question });\r\n      setChatbotAnswer(data.answer); // Assuming the response contains the chatbot's answer\r\n      setSuccessMessage(\"Chatbot responded successfully!\");\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        error.response?.data?.message || \"Failed to get chatbot response. Try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\" style={{ maxWidth: \"600px\", margin: \"auto\", textAlign: \"center\" }}>\r\n      <h2>Chatbot</h2>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Your email (optional if already logged in)\"\r\n          style={{ margin: \"10px 0\", padding: \"5px\", width: \"80%\" }}\r\n        />\r\n        <button onClick={handleGenerateOtp} disabled={loading || otpSent}>\r\n          {loading ? \"Sending OTP...\" : otpSent ? \"OTP Sent\" : \"Generate OTP\"}\r\n        </button>\r\n      </div>\r\n      {otpSent && (\r\n        <>\r\n          <div>\r\n            <label>OTP:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              placeholder=\"Enter the OTP\"\r\n              style={{ margin: \"10px 0\", padding: \"5px\", width: \"80%\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Question:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n              placeholder=\"Ask the chatbot a question\"\r\n              style={{ margin: \"10px 0\", padding: \"5px\", width: \"80%\" }}\r\n            />\r\n            <button onClick={handleSubmit} disabled={loading}>\r\n              {loading ? \"Loading...\" : \"Ask Chatbot\"}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n      {chatbotAnswer && <p><strong>Chatbot Answer:</strong> {chatbotAnswer}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}