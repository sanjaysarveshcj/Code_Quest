{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Askquestion\\\\Askquestion.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import './Askquestion.css'\n// import { useNavigate } from 'react-router-dom'\n// import { useSelector, useDispatch } from \"react-redux\"\n// import { askquestion} from '../../action/question'\n\n// const Askquestion = () => {\n//     const navigate = useNavigate();\n//     const dispatch=useDispatch();\n//     const user = useSelector((state)=>state.currentuserreducer)\n//     const [questiontitle, setquestiontitle] = useState(\"\");\n//     const [questionbody, setquestionbody] = useState(\"\");\n//     const [questiontag, setquestiontags] = useState(\"\")\n\n//     const handlesubmit = (e) => {\n//         e.preventDefault();\n\n//         if (user) {\n//             if (questionbody && questiontitle && questiontag) {\n//                 dispatch(askquestion({questiontitle,questionbody,questiontag,userposted:user.result.name},navigate))\n//                 alert(\"you have successfuly posted a question\")\n\n//             } else {\n//                 alert(\"Please enter all the fields\")\n//             }\n//         } else {\n//             alert(\"Login to ask question\")\n//         }\n//     }\n//     const handleenter = (e) => {\n//         if (e.code === 'Enter') {\n//             setquestionbody(questionbody + \"\\n\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"ask-question\">\n//             <div className=\"ask-ques-container\">\n//                 <h1>Ask a public Question</h1>\n//                 <form onSubmit={handlesubmit}>\n//                     <div className=\"ask-form-container\">\n//                         <label htmlFor=\"ask-ques-title\">\n//                             <h4>Title</h4>\n//                             <p>Be specific and imagine you're asking a question to another person</p>\n//                             <input type=\"text\" id=\"ask-ques-title\"\n//                                 onChange={(e) => {\n//                                     setquestiontitle(e.target.value);\n//                                 }} placeholder='e.g. Is there an R function for finding the index of an element in a vector?' />\n//                         </label>\n//                         <label htmlFor=\"ask-ques-body\">\n//                             <h4>Body</h4>\n//                             <p>Include all the information someone would need to answer your question</p>\n//                             <textarea name=\"\" id=\"ask-ques-body\" onChange={(e) => {\n//                                 setquestionbody(e.target.value);\n\n//                             }}\n//                                 cols=\"30\"\n//                                 rows=\"10\"\n//                                 onKeyDown={handleenter}\n//                             ></textarea>\n//                         </label>\n//                         <label htmlFor=\"ask-ques-tags\">\n//                             <h4>Tags</h4>\n//                             <p>Add up to 5 tags to descibe what your question is about</p>\n//                             <input type=\"text\" id='ask-ques-tags' onChange={(e) => {\n//                                 setquestiontags(e.target.value.split(\" \"));\n//                             }}\n//                                 placeholder='e.g. (xml typescript wordpress'\n//                             />\n//                         </label>\n//                     </div>\n//                     <input type=\"submit\"\n//                         value=\"Review your question\"\n//                         className='review-btn' />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Askquestion\n\nimport React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion } from \"../../action/question\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Askquestion = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleSendOtp = async () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email\n      });\n      setOtpSent(true);\n      setMessage(response.data.message || \"OTP sent successfully!\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP.\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", {\n        email,\n        otp\n      });\n      setOtpVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  const handleVideoUpload = async e => {\n    const videoFile = e.target.files[0];\n    if (!videoFile) {\n      alert(\"Please select a video file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"email\", email);\n    formData.append(\"otp\", otp);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload-video\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.message || \"Video uploaded successfully!\");\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(error);\n      alert(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to upload video.\");\n    }\n  };\n  const handlesubmit = e => {\n    e.preventDefault();\n    if (user) {\n      if (questionbody && questiontitle && questiontag) {\n        dispatch(askquestion({\n          questiontitle,\n          questionbody,\n          questiontag,\n          userposted: user.result.name\n        }, navigate));\n        alert(\"You have successfully posted a question\");\n      } else {\n        alert(\"Please enter all the fields\");\n      }\n    } else {\n      alert(\"Login to ask a question\");\n    }\n  };\n  const handleenter = e => {\n    if (e.code === \"Enter\") {\n      setquestionbody(questionbody + \"\\n\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ask-question\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ask-ques-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ask a public Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlesubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Be specific and imagine you're asking a question to another person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-title\",\n              onChange: e => {\n                setquestiontitle(e.target.value);\n              },\n              placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Include all the information someone would need to answer your question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"\",\n              id: \"ask-ques-body\",\n              onChange: e => {\n                setquestionbody(e.target.value);\n              },\n              cols: \"30\",\n              rows: \"10\",\n              onKeyDown: handleenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add up to 5 tags to describe what your question is about\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-tags\",\n              onChange: e => {\n                setquestiontags(e.target.value.split(\" \"));\n              },\n              placeholder: \"e.g. (xml typescript wordpress)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your email to receive an OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSendOtp,\n            disabled: otpSent,\n            className: \"otp-btn\",\n            children: \"Send OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"otp\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Enter the OTP sent to your email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: otp,\n                onChange: e => setOtp(e.target.value),\n                placeholder: \"Enter OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVerifyOtp,\n              disabled: otpVerified,\n              className: \"otp-btn\",\n              children: \"Verify OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), otpVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-upload-section\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"video-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Upload Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload a video file (Max: 50MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"video/*\",\n              onChange: handleVideoUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Review your question\",\n          className: \"review-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Askquestion, \"ydlu0U65Z74OiBx5bSNCe46GsdE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Askquestion;\nexport default Askquestion;\nvar _c;\n$RefreshReg$(_c, \"Askquestion\");","map":{"version":3,"names":["React","useState","useNavigate","useSelector","useDispatch","askquestion","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Askquestion","_s","navigate","dispatch","user","state","currentuserreducer","questiontitle","setquestiontitle","questionbody","setquestionbody","questiontag","setquestiontags","email","setEmail","otp","setOtp","otpSent","setOtpSent","otpVerified","setOtpVerified","video","setVideo","message","setMessage","handleSendOtp","alert","response","post","data","error","_error$response","_error$response$data","handleVerifyOtp","_error$response2","_error$response2$data","handleVideoUpload","e","videoFile","target","files","formData","FormData","append","headers","_error$response3","_error$response3$data","console","handlesubmit","preventDefault","userposted","result","name","handleenter","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","value","placeholder","cols","rows","onKeyDown","split","onClick","disabled","accept","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Askquestion/Askquestion.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import './Askquestion.css'\n// import { useNavigate } from 'react-router-dom'\n// import { useSelector, useDispatch } from \"react-redux\"\n// import { askquestion} from '../../action/question'\n\n\n// const Askquestion = () => {\n//     const navigate = useNavigate();\n//     const dispatch=useDispatch();\n//     const user = useSelector((state)=>state.currentuserreducer)\n//     const [questiontitle, setquestiontitle] = useState(\"\");\n//     const [questionbody, setquestionbody] = useState(\"\");\n//     const [questiontag, setquestiontags] = useState(\"\")\n\n//     const handlesubmit = (e) => {\n//         e.preventDefault();\n\n\n\n//         if (user) {\n//             if (questionbody && questiontitle && questiontag) {\n//                 dispatch(askquestion({questiontitle,questionbody,questiontag,userposted:user.result.name},navigate))\n//                 alert(\"you have successfuly posted a question\")\n\n//             } else {\n//                 alert(\"Please enter all the fields\")\n//             }\n//         } else {\n//             alert(\"Login to ask question\")\n//         }\n//     }\n//     const handleenter = (e) => {\n//         if (e.code === 'Enter') {\n//             setquestionbody(questionbody + \"\\n\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"ask-question\">\n//             <div className=\"ask-ques-container\">\n//                 <h1>Ask a public Question</h1>\n//                 <form onSubmit={handlesubmit}>\n//                     <div className=\"ask-form-container\">\n//                         <label htmlFor=\"ask-ques-title\">\n//                             <h4>Title</h4>\n//                             <p>Be specific and imagine you're asking a question to another person</p>\n//                             <input type=\"text\" id=\"ask-ques-title\"\n//                                 onChange={(e) => {\n//                                     setquestiontitle(e.target.value);\n//                                 }} placeholder='e.g. Is there an R function for finding the index of an element in a vector?' />\n//                         </label>\n//                         <label htmlFor=\"ask-ques-body\">\n//                             <h4>Body</h4>\n//                             <p>Include all the information someone would need to answer your question</p>\n//                             <textarea name=\"\" id=\"ask-ques-body\" onChange={(e) => {\n//                                 setquestionbody(e.target.value);\n\n//                             }}\n//                                 cols=\"30\"\n//                                 rows=\"10\"\n//                                 onKeyDown={handleenter}\n//                             ></textarea>\n//                         </label>\n//                         <label htmlFor=\"ask-ques-tags\">\n//                             <h4>Tags</h4>\n//                             <p>Add up to 5 tags to descibe what your question is about</p>\n//                             <input type=\"text\" id='ask-ques-tags' onChange={(e) => {\n//                                 setquestiontags(e.target.value.split(\" \"));\n//                             }}\n//                                 placeholder='e.g. (xml typescript wordpress'\n//                             />\n//                         </label>\n//                     </div>\n//                     <input type=\"submit\"\n//                         value=\"Review your question\"\n//                         className='review-btn' />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Askquestion\n\nimport React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion } from \"../../action/question\";\nimport axios from \"axios\";\n\nconst Askquestion = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSendOtp = async () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\n      setOtpSent(true);\n      setMessage(response.data.message || \"OTP sent successfully!\");\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-otp\", { email, otp });\n      setOtpVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\n    }\n  };\n\n  const handleVideoUpload = async (e) => {\n    const videoFile = e.target.files[0];\n  \n    if (!videoFile) {\n      alert(\"Please select a video file.\");\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"email\", email);\n    formData.append(\"otp\", otp);\n  \n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload-video\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      alert(response.data.message || \"Video uploaded successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(error.response?.data?.message || \"Failed to upload video.\");\n    }\n  };\n  \n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n\n    if (user) {\n      if (questionbody && questiontitle && questiontag) {\n        dispatch(\n          askquestion(\n            {\n              questiontitle,\n              questionbody,\n              questiontag,\n              userposted: user.result.name,\n            },\n            navigate\n          )\n        );\n        alert(\"You have successfully posted a question\");\n      } else {\n        alert(\"Please enter all the fields\");\n      }\n    } else {\n      alert(\"Login to ask a question\");\n    }\n  };\n\n  const handleenter = (e) => {\n    if (e.code === \"Enter\") {\n      setquestionbody(questionbody + \"\\n\");\n    }\n  };\n\n  return (\n    <div className=\"ask-question\">\n      <div className=\"ask-ques-container\">\n        <h1>Ask a public Question</h1>\n        <form onSubmit={handlesubmit}>\n          <div className=\"ask-form-container\">\n            <label htmlFor=\"ask-ques-title\">\n              <h4>Title</h4>\n              <p>\n                Be specific and imagine you're asking a question to another\n                person\n              </p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-title\"\n                onChange={(e) => {\n                  setquestiontitle(e.target.value);\n                }}\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\n              />\n            </label>\n            <label htmlFor=\"ask-ques-body\">\n              <h4>Body</h4>\n              <p>\n                Include all the information someone would need to answer your\n                question\n              </p>\n              <textarea\n                name=\"\"\n                id=\"ask-ques-body\"\n                onChange={(e) => {\n                  setquestionbody(e.target.value);\n                }}\n                cols=\"30\"\n                rows=\"10\"\n                onKeyDown={handleenter}\n              ></textarea>\n            </label>\n            <label htmlFor=\"ask-ques-tags\">\n              <h4>Tags</h4>\n              <p>Add up to 5 tags to describe what your question is about</p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-tags\"\n                onChange={(e) => {\n                  setquestiontags(e.target.value.split(\" \"));\n                }}\n                placeholder=\"e.g. (xml typescript wordpress)\"\n              />\n            </label>\n          </div>\n\n          <div className=\"otp-section\">\n            <label htmlFor=\"email\">\n              <h4>Email</h4>\n              <p>Enter your email to receive an OTP</p>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your email\"\n              />\n            </label>\n            <button\n              type=\"button\"\n              onClick={handleSendOtp}\n              disabled={otpSent}\n              className=\"otp-btn\"\n            >\n              Send OTP\n            </button>\n            {otpSent && (\n              <>\n                <label htmlFor=\"otp\">\n                  <h4>OTP</h4>\n                  <p>Enter the OTP sent to your email</p>\n                  <input\n                    type=\"text\"\n                    value={otp}\n                    onChange={(e) => setOtp(e.target.value)}\n                    placeholder=\"Enter OTP\"\n                  />\n                </label>\n                <button\n                  type=\"button\"\n                  onClick={handleVerifyOtp}\n                  disabled={otpVerified}\n                  className=\"otp-btn\"\n                >\n                  Verify OTP\n                </button>\n              </>\n            )}\n          </div>\n\n          {otpVerified && (\n            <div className=\"video-upload-section\">\n              <label htmlFor=\"video-upload\">\n                <h4>Upload Video</h4>\n                <p>Upload a video file (Max: 50MB)</p>\n                <input\n                  type=\"file\"\n                  accept=\"video/*\"\n                  onChange={handleVideoUpload}\n                />\n              </label>\n            </div>\n          )}\n\n          <input\n            type=\"submit\"\n            value=\"Review your question\"\n            className=\"review-btn\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Askquestion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}