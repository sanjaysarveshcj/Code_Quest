{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Askquestion\\\\Askquestion.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import './Askquestion.css'\n// import { useNavigate } from 'react-router-dom'\n// import { useSelector, useDispatch } from \"react-redux\"\n// import { askquestion} from '../../action/question'\n\n// const Askquestion = () => {\n//     const navigate = useNavigate();\n//     const dispatch=useDispatch();\n//     const user = useSelector((state)=>state.currentuserreducer)\n//     const [questiontitle, setquestiontitle] = useState(\"\");\n//     const [questionbody, setquestionbody] = useState(\"\");\n//     const [questiontag, setquestiontags] = useState(\"\")\n\n//     const handlesubmit = (e) => {\n//         e.preventDefault();\n\n//         if (user) {\n//             if (questionbody && questiontitle && questiontag) {\n//                 dispatch(askquestion({questiontitle,questionbody,questiontag,userposted:user.result.name},navigate))\n//                 alert(\"you have successfuly posted a question\")\n\n//             } else {\n//                 alert(\"Please enter all the fields\")\n//             }\n//         } else {\n//             alert(\"Login to ask question\")\n//         }\n//     }\n//     const handleenter = (e) => {\n//         if (e.code === 'Enter') {\n//             setquestionbody(questionbody + \"\\n\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"ask-question\">\n//             <div className=\"ask-ques-container\">\n//                 <h1>Ask a public Question</h1>\n//                 <form onSubmit={handlesubmit}>\n//                     <div className=\"ask-form-container\">\n//                         <label htmlFor=\"ask-ques-title\">\n//                             <h4>Title</h4>\n//                             <p>Be specific and imagine you're asking a question to another person</p>\n//                             <input type=\"text\" id=\"ask-ques-title\"\n//                                 onChange={(e) => {\n//                                     setquestiontitle(e.target.value);\n//                                 }} placeholder='e.g. Is there an R function for finding the index of an element in a vector?' />\n//                         </label>\n//                         <label htmlFor=\"ask-ques-body\">\n//                             <h4>Body</h4>\n//                             <p>Include all the information someone would need to answer your question</p>\n//                             <textarea name=\"\" id=\"ask-ques-body\" onChange={(e) => {\n//                                 setquestionbody(e.target.value);\n\n//                             }}\n//                                 cols=\"30\"\n//                                 rows=\"10\"\n//                                 onKeyDown={handleenter}\n//                             ></textarea>\n//                         </label>\n//                         <label htmlFor=\"ask-ques-tags\">\n//                             <h4>Tags</h4>\n//                             <p>Add up to 5 tags to descibe what your question is about</p>\n//                             <input type=\"text\" id='ask-ques-tags' onChange={(e) => {\n//                                 setquestiontags(e.target.value.split(\" \"));\n//                             }}\n//                                 placeholder='e.g. (xml typescript wordpress'\n//                             />\n//                         </label>\n//                     </div>\n//                     <input type=\"submit\"\n//                         value=\"Review your question\"\n//                         className='review-btn' />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Askquestion\n\nimport React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion, verifyotp } from \"../../action/question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Askquestion = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [video, setVideo] = useState(null);\n  const [otp, setOtp] = useState(\"\");\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const handlesubmit = async e => {\n    e.preventDefault();\n    const currentHour = new Date().getHours();\n    if (currentHour < 14 || currentHour >= 19) {\n      alert(\"You can only upload videos between 2 PM and 7 PM.\");\n      return;\n    }\n    if (!otpVerified) {\n      alert(\"Please verify your OTP before uploading a question.\");\n      return;\n    }\n    if ((video === null || video === void 0 ? void 0 : video.size) > 50 * 1024 * 1024) {\n      alert(\"Video size cannot exceed 50MB.\");\n      return;\n    }\n    if (video) {\n      const videoDuration = await getVideoDuration(video);\n      if (videoDuration > 120) {\n        alert(\"Video length cannot exceed 2 minutes.\");\n        return;\n      }\n    }\n    if (user) {\n      if (questionbody && questiontitle && questiontag) {\n        const formData = new FormData();\n        formData.append(\"questiontitle\", questiontitle);\n        formData.append(\"questionbody\", questionbody);\n        formData.append(\"questiontag\", questiontag);\n        formData.append(\"userposted\", user.result.name);\n        formData.append(\"video\", video);\n        dispatch(askquestion(formData, navigate));\n        alert(\"You have successfully posted a question.\");\n      } else {\n        alert(\"Please fill in all the fields.\");\n      }\n    } else {\n      alert(\"Login to ask a question.\");\n    }\n  };\n  const sendOtp = () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    dispatch(sendOtp({\n      email\n    }));\n    alert(\"OTP sent to your email.\");\n  };\n  const verifyOtpHandler = () => {\n    dispatch(verifyotp({\n      email,\n      otp\n    })).then(res => {\n      if (res) {\n        setOtpVerified(true);\n        alert(\"OTP verified successfully.\");\n      } else {\n        alert(\"Invalid OTP.\");\n      }\n    });\n  };\n  const getVideoDuration = file => {\n    return new Promise(resolve => {\n      const video = document.createElement(\"video\");\n      video.preload = \"metadata\";\n      video.onloadedmetadata = function () {\n        window.URL.revokeObjectURL(video.src);\n        resolve(video.duration);\n      };\n      video.src = URL.createObjectURL(file);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ask-question\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ask-ques-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ask a public Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlesubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Be specific and imagine you're asking a question to another person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-title\",\n              onChange: e => {\n                setquestiontitle(e.target.value);\n              },\n              placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Include all the information someone would need to answer your question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"ask-ques-body\",\n              onChange: e => {\n                setquestionbody(e.target.value);\n              },\n              cols: \"30\",\n              rows: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add up to 5 tags to describe what your question is about\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ask-ques-tags\",\n              onChange: e => {\n                setquestiontags(e.target.value.split(\" \"));\n              },\n              placeholder: \"e.g. (xml typescript wordpress)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ask-ques-video\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload a video of your question (max 2 mins and 50MB).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"ask-ques-video\",\n              accept: \"video/*\",\n              onChange: e => setVideo(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email-verification\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Email Verification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your email to receive an OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: sendOtp,\n              children: \"Send OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter OTP\",\n              onChange: e => setOtp(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: verifyOtpHandler,\n              children: \"Verify OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Review your question\",\n          className: \"review-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Askquestion, \"5pgxziH3ZICc+dsfi8aRHZ2lXDU=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Askquestion;\nexport default Askquestion;\nvar _c;\n$RefreshReg$(_c, \"Askquestion\");","map":{"version":3,"names":["React","useState","useNavigate","useSelector","useDispatch","askquestion","verifyotp","jsxDEV","_jsxDEV","Askquestion","_s","navigate","dispatch","user","state","currentuserreducer","questiontitle","setquestiontitle","questionbody","setquestionbody","questiontag","setquestiontags","video","setVideo","otp","setOtp","otpVerified","setOtpVerified","email","setEmail","handlesubmit","e","preventDefault","currentHour","Date","getHours","alert","size","videoDuration","getVideoDuration","formData","FormData","append","result","name","sendOtp","verifyOtpHandler","then","res","file","Promise","resolve","document","createElement","preload","onloadedmetadata","window","URL","revokeObjectURL","src","duration","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","target","value","placeholder","cols","rows","split","accept","files","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Askquestion/Askquestion.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import './Askquestion.css'\n// import { useNavigate } from 'react-router-dom'\n// import { useSelector, useDispatch } from \"react-redux\"\n// import { askquestion} from '../../action/question'\n\n\n// const Askquestion = () => {\n//     const navigate = useNavigate();\n//     const dispatch=useDispatch();\n//     const user = useSelector((state)=>state.currentuserreducer)\n//     const [questiontitle, setquestiontitle] = useState(\"\");\n//     const [questionbody, setquestionbody] = useState(\"\");\n//     const [questiontag, setquestiontags] = useState(\"\")\n\n//     const handlesubmit = (e) => {\n//         e.preventDefault();\n\n\n\n//         if (user) {\n//             if (questionbody && questiontitle && questiontag) {\n//                 dispatch(askquestion({questiontitle,questionbody,questiontag,userposted:user.result.name},navigate))\n//                 alert(\"you have successfuly posted a question\")\n\n//             } else {\n//                 alert(\"Please enter all the fields\")\n//             }\n//         } else {\n//             alert(\"Login to ask question\")\n//         }\n//     }\n//     const handleenter = (e) => {\n//         if (e.code === 'Enter') {\n//             setquestionbody(questionbody + \"\\n\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"ask-question\">\n//             <div className=\"ask-ques-container\">\n//                 <h1>Ask a public Question</h1>\n//                 <form onSubmit={handlesubmit}>\n//                     <div className=\"ask-form-container\">\n//                         <label htmlFor=\"ask-ques-title\">\n//                             <h4>Title</h4>\n//                             <p>Be specific and imagine you're asking a question to another person</p>\n//                             <input type=\"text\" id=\"ask-ques-title\"\n//                                 onChange={(e) => {\n//                                     setquestiontitle(e.target.value);\n//                                 }} placeholder='e.g. Is there an R function for finding the index of an element in a vector?' />\n//                         </label>\n//                         <label htmlFor=\"ask-ques-body\">\n//                             <h4>Body</h4>\n//                             <p>Include all the information someone would need to answer your question</p>\n//                             <textarea name=\"\" id=\"ask-ques-body\" onChange={(e) => {\n//                                 setquestionbody(e.target.value);\n\n//                             }}\n//                                 cols=\"30\"\n//                                 rows=\"10\"\n//                                 onKeyDown={handleenter}\n//                             ></textarea>\n//                         </label>\n//                         <label htmlFor=\"ask-ques-tags\">\n//                             <h4>Tags</h4>\n//                             <p>Add up to 5 tags to descibe what your question is about</p>\n//                             <input type=\"text\" id='ask-ques-tags' onChange={(e) => {\n//                                 setquestiontags(e.target.value.split(\" \"));\n//                             }}\n//                                 placeholder='e.g. (xml typescript wordpress'\n//                             />\n//                         </label>\n//                     </div>\n//                     <input type=\"submit\"\n//                         value=\"Review your question\"\n//                         className='review-btn' />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Askquestion\n\nimport React, { useState } from \"react\";\nimport \"./Askquestion.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { askquestion, verifyotp } from \"../../action/question\";\n\nconst Askquestion = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.currentuserreducer);\n  const [questiontitle, setquestiontitle] = useState(\"\");\n  const [questionbody, setquestionbody] = useState(\"\");\n  const [questiontag, setquestiontags] = useState(\"\");\n  const [video, setVideo] = useState(null);\n  const [otp, setOtp] = useState(\"\");\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const handlesubmit = async (e) => {\n    e.preventDefault();\n\n    const currentHour = new Date().getHours();\n    if (currentHour < 14 || currentHour >= 19) {\n      alert(\"You can only upload videos between 2 PM and 7 PM.\");\n      return;\n    }\n\n    if (!otpVerified) {\n      alert(\"Please verify your OTP before uploading a question.\");\n      return;\n    }\n\n    if (video?.size > 50 * 1024 * 1024) {\n      alert(\"Video size cannot exceed 50MB.\");\n      return;\n    }\n\n    if (video) {\n      const videoDuration = await getVideoDuration(video);\n      if (videoDuration > 120) {\n        alert(\"Video length cannot exceed 2 minutes.\");\n        return;\n      }\n    }\n\n    if (user) {\n      if (questionbody && questiontitle && questiontag) {\n        const formData = new FormData();\n        formData.append(\"questiontitle\", questiontitle);\n        formData.append(\"questionbody\", questionbody);\n        formData.append(\"questiontag\", questiontag);\n        formData.append(\"userposted\", user.result.name);\n        formData.append(\"video\", video);\n\n        dispatch(askquestion(formData, navigate));\n        alert(\"You have successfully posted a question.\");\n      } else {\n        alert(\"Please fill in all the fields.\");\n      }\n    } else {\n      alert(\"Login to ask a question.\");\n    }\n  };\n\n  const sendOtp = () => {\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    dispatch(sendOtp({ email }));\n    alert(\"OTP sent to your email.\");\n  };\n\n  const verifyOtpHandler = () => {\n    dispatch(verifyotp({ email, otp })).then((res) => {\n      if (res) {\n        setOtpVerified(true);\n        alert(\"OTP verified successfully.\");\n      } else {\n        alert(\"Invalid OTP.\");\n      }\n    });\n  };\n\n  const getVideoDuration = (file) => {\n    return new Promise((resolve) => {\n      const video = document.createElement(\"video\");\n      video.preload = \"metadata\";\n\n      video.onloadedmetadata = function () {\n        window.URL.revokeObjectURL(video.src);\n        resolve(video.duration);\n      };\n\n      video.src = URL.createObjectURL(file);\n    });\n  };\n\n  return (\n    <div className=\"ask-question\">\n      <div className=\"ask-ques-container\">\n        <h1>Ask a public Question</h1>\n        <form onSubmit={handlesubmit}>\n          <div className=\"ask-form-container\">\n            <label htmlFor=\"ask-ques-title\">\n              <h4>Title</h4>\n              <p>Be specific and imagine you're asking a question to another person</p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-title\"\n                onChange={(e) => {\n                  setquestiontitle(e.target.value);\n                }}\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\n              />\n            </label>\n            <label htmlFor=\"ask-ques-body\">\n              <h4>Body</h4>\n              <p>Include all the information someone would need to answer your question</p>\n              <textarea\n                id=\"ask-ques-body\"\n                onChange={(e) => {\n                  setquestionbody(e.target.value);\n                }}\n                cols=\"30\"\n                rows=\"10\"\n              ></textarea>\n            </label>\n            <label htmlFor=\"ask-ques-tags\">\n              <h4>Tags</h4>\n              <p>Add up to 5 tags to describe what your question is about</p>\n              <input\n                type=\"text\"\n                id=\"ask-ques-tags\"\n                onChange={(e) => {\n                  setquestiontags(e.target.value.split(\" \"));\n                }}\n                placeholder=\"e.g. (xml typescript wordpress)\"\n              />\n            </label>\n            <label htmlFor=\"ask-ques-video\">\n              <h4>Video</h4>\n              <p>Upload a video of your question (max 2 mins and 50MB).</p>\n              <input\n                type=\"file\"\n                id=\"ask-ques-video\"\n                accept=\"video/*\"\n                onChange={(e) => setVideo(e.target.files[0])}\n              />\n            </label>\n            <label htmlFor=\"email-verification\">\n              <h4>Email Verification</h4>\n              <p>Enter your email to receive an OTP</p>\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <button type=\"button\" onClick={sendOtp}>\n                Send OTP\n              </button>\n              <input\n                type=\"text\"\n                placeholder=\"Enter OTP\"\n                onChange={(e) => setOtp(e.target.value)}\n              />\n              <button type=\"button\" onClick={verifyOtpHandler}>\n                Verify OTP\n              </button>\n            </label>\n          </div>\n          <input type=\"submit\" value=\"Review your question\" className=\"review-btn\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Askquestion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}