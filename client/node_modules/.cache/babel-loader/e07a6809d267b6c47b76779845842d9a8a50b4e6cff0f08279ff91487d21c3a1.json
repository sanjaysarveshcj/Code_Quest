{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './Multilingual.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const [language, setLanguage] = useState(\"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(null);\n\n  /** ðŸ”¹ Function to Translate Page Content */\n  const translatePage = async lang => {\n    try {\n      var _response$data, _response$data$;\n      const response = await axios.post(\"https://api-inference.huggingface.co/models/facebook/m2m100_418M\", {\n        inputs: `Welcome to the OTP verification system. Please verify your OTP.`\n      }, {\n        headers: {\n          Authorization: `Bearer YOUR_HUGGINGFACE_API_KEY`\n        }\n      });\n      const translatedText = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$ = _response$data[0]) === null || _response$data$ === void 0 ? void 0 : _response$data$.translation_text) || \"Translation failed\";\n      setTranslatedText(translatedText);\n    } catch (error) {\n      console.error(\"Translation Error:\", error);\n      setTranslatedText(\"Translation failed.\");\n    }\n  };\n\n  /** ðŸ”¹ Handle Language Selection */\n  const handleLanguageChange = async lang => {\n    setLanguage(lang);\n    setTranslatedText(null); // Reset translation\n\n    if (isVerified) {\n      await translatePage(lang);\n    }\n  };\n\n  /** ðŸ”¹ Handle OTP Request */\n  const handleSendOtp = async () => {\n    if (!emailOrMobile) {\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile\n    } : {\n      mobile: emailOrMobile\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to send OTP.\");\n    }\n  };\n\n  /** ðŸ”¹ Handle OTP Verification */\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile,\n      otp\n    } : {\n      mobile: emailOrMobile,\n      otp\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setIsVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n      await translatePage(language); // Translate page after OTP verification\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: translatedText || \"Welcome to the OTP verification system\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: \"Portuguese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [language === \"fr\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your mobile number\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this), emailOrMobile && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), isVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: translatedText || \"Verification successful! You are authenticated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"EzzBoUb7H49/zDEjHmPe8iZ/d8s=\");\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Multilingual","_s","language","setLanguage","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","message","setMessage","translatedText","setTranslatedText","translatePage","lang","_response$data","_response$data$","response","post","inputs","headers","Authorization","data","translation_text","error","console","handleLanguageChange","handleSendOtp","alert","endpoint","payload","email","mobile","_error$response","_error$response$data","handleVerifyOtp","_error$response2","_error$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Multilingual.css'\r\n\r\nconst Multilingual = () => {\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [translatedText, setTranslatedText] = useState(null);\r\n\r\n  /** ðŸ”¹ Function to Translate Page Content */\r\n  const translatePage = async (lang) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://api-inference.huggingface.co/models/facebook/m2m100_418M\",\r\n        {\r\n          inputs: `Welcome to the OTP verification system. Please verify your OTP.`,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer YOUR_HUGGINGFACE_API_KEY` },\r\n        }\r\n      );\r\n\r\n      const translatedText = response.data?.[0]?.translation_text || \"Translation failed\";\r\n      setTranslatedText(translatedText);\r\n    } catch (error) {\r\n      console.error(\"Translation Error:\", error);\r\n      setTranslatedText(\"Translation failed.\");\r\n    }\r\n  };\r\n\r\n  /** ðŸ”¹ Handle Language Selection */\r\n  const handleLanguageChange = async (lang) => {\r\n    setLanguage(lang);\r\n    setTranslatedText(null); // Reset translation\r\n\r\n    if (isVerified) {\r\n      await translatePage(lang);\r\n    }\r\n  };\r\n\r\n  /** ðŸ”¹ Handle OTP Request */\r\n  const handleSendOtp = async () => {\r\n    if (!emailOrMobile) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile } : { mobile: emailOrMobile };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\r\n    }\r\n  };\r\n\r\n  /** ðŸ”¹ Handle OTP Verification */\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile, otp } : { mobile: emailOrMobile, otp };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setIsVerified(true);\r\n      setMessage(response.data.message || \"OTP verified successfully!\");\r\n      await translatePage(language); // Translate page after OTP verification\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{translatedText || \"Welcome to the OTP verification system\"}</h1>\r\n\r\n      {/* ðŸ”¹ Language Selection */}\r\n      <select onChange={(e) => handleLanguageChange(e.target.value)} value={language}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"es\">Spanish</option>\r\n        <option value=\"hi\">Hindi</option>\r\n        <option value=\"pt\">Portuguese</option>\r\n        <option value=\"zh\">Chinese</option>\r\n        <option value=\"fr\">French</option>\r\n      </select>\r\n\r\n      {/* ðŸ”¹ Conditional Input (Email for French, Mobile for Others) */}\r\n      <div>\r\n        {language === \"fr\" ? (\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={emailOrMobile}\r\n            onChange={(e) => setEmailOrMobile(e.target.value)}\r\n          />\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your mobile number\"\r\n            value={emailOrMobile}\r\n            onChange={(e) => setEmailOrMobile(e.target.value)}\r\n          />\r\n        )}\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      {/* ðŸ”¹ OTP Input Field */}\r\n      {emailOrMobile && !isVerified && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* ðŸ”¹ Verification Success Message */}\r\n      {isVerified && <p>{translatedText || \"Verification successful! You are authenticated.\"}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}