{"ast":null,"code":"var _jsxFileName = \"D:\\\\codequest-main (2)\\\\codequest-main\\\\client\\\\src\\\\pages\\\\Multilanguage\\\\Multilingual.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './Multilingual.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multilingual = () => {\n  _s();\n  const [language, setLanguage] = useState(localStorage.getItem(\"selectedLang\") || \"en\");\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(null);\n  const translatePage = async lang => {\n    setTranslatedText(\"Translating... Please wait ‚è≥\");\n    setSelectedLang(lang); // Save selected language\n\n    try {\n      console.log(`Requesting translation for: ${lang}`);\n      const elements = document.body.getElementsByTagName(\"*\");\n      let textNodes = [];\n      for (let i = 0; i < elements.length; i++) {\n        let element = elements[i];\n\n        // Handle visible text nodes\n        for (let node of element.childNodes) {\n          if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" && window.getComputedStyle(element).display !== \"none\") {\n            textNodes.push({\n              node,\n              text: node.nodeValue.trim()\n            });\n          }\n        }\n\n        // Handle placeholders (e.g., input, textarea)\n        if (element.placeholder) {\n          textNodes.push({\n            node: element,\n            text: element.placeholder,\n            isPlaceholder: true\n          });\n        }\n      }\n\n      // Send texts for translation\n      let texts = textNodes.map(item => item.text);\n      const response = await axios.post(\"http://localhost:5000/api/translate\", {\n        text: texts,\n        targetLang: lang\n      });\n      console.log(\"Full Translation Response:\", response.data);\n      if (Array.isArray(response.data) && response.data.length === textNodes.length) {\n        textNodes.forEach((item, index) => {\n          var _response$data$index;\n          let translatedText = ((_response$data$index = response.data[index]) === null || _response$data$index === void 0 ? void 0 : _response$data$index.translation_text) || item.text;\n          if (item.isPlaceholder) {\n            item.node.placeholder = translatedText;\n          } else {\n            item.node.nodeValue = translatedText;\n          }\n        });\n        setTranslatedText(\"Translation successful ‚úÖ\");\n      } else {\n        console.error(\"Unexpected response format:\", response.data);\n        setTranslatedText(\"Translation failed. Unexpected response.\");\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Translation Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setTranslatedText(\"Translation failed. Please try again.\");\n    }\n  };\n\n  // ‚úÖ Pass `selectedLang` safely inside the MutationObserver\n  useEffect(() => {\n    const observer = new MutationObserver(() => {\n      if (selectedLang) {\n        translatePage(selectedLang); // Use the last selected language\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect(); // Cleanup on unmount\n  }, [selectedLang]); // React will re-run if `selectedLang` changes\n\n  const handleLanguageChange = async lang => {\n    setLanguage(lang);\n    setTranslatedText(null); // Reset translation\n\n    if (isVerified) {\n      await translatePage(lang);\n    }\n  };\n\n  /** üîπ Handle OTP Request */\n  const handleSendOtp = async () => {\n    if (!emailOrMobile) {\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile\n    } : {\n      mobile: emailOrMobile\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to send OTP.\");\n    }\n  };\n\n  /** üîπ Handle OTP Verification */\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\n      return;\n    }\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\n    const payload = language === \"fr\" ? {\n      email: emailOrMobile,\n      otp\n    } : {\n      mobile: emailOrMobile,\n      otp\n    };\n    try {\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\n      setIsVerified(true);\n      setMessage(response.data.message || \"OTP verified successfully!\");\n      await translatePage(language); // Translate page after OTP verification\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Invalid or expired OTP.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"otp-title\",\n      children: translatedText || \"Welcome to the OTP verification system\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"otp-language-selector\",\n      onChange: e => handleLanguageChange(e.target.value),\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pt\",\n        children: \"Portuguese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"zh\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-input-container\",\n      children: [language === \"fr\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: \"Enter your mobile number\",\n        value: emailOrMobile,\n        onChange: e => setEmailOrMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `otp-message ${isVerified ? \"success\" : \"error\"}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }, this), emailOrMobile && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-verification-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"otp-input\",\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this), isVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-success-message\",\n      children: translatedText || \"Verification successful! You are authenticated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Multilingual, \"1F7VmhRa9ZVReaQM7qaJHI3B91k=\");\n_c = Multilingual;\nexport default Multilingual;\nvar _c;\n$RefreshReg$(_c, \"Multilingual\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Multilingual","_s","language","setLanguage","localStorage","getItem","emailOrMobile","setEmailOrMobile","otp","setOtp","isVerified","setIsVerified","message","setMessage","translatedText","setTranslatedText","translatePage","lang","setSelectedLang","console","log","elements","document","body","getElementsByTagName","textNodes","i","length","element","node","childNodes","nodeType","Node","TEXT_NODE","nodeValue","trim","window","getComputedStyle","display","push","text","placeholder","isPlaceholder","texts","map","item","response","post","targetLang","data","Array","isArray","forEach","index","_response$data$index","translation_text","error","_error$response","observer","MutationObserver","selectedLang","observe","childList","subtree","disconnect","handleLanguageChange","handleSendOtp","alert","endpoint","payload","email","mobile","_error$response2","_error$response2$data","handleVerifyOtp","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["D:/codequest-main (2)/codequest-main/client/src/pages/Multilanguage/Multilingual.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Multilingual.css';\r\n\r\nconst Multilingual = () => {\r\n  const [language, setLanguage] = useState(localStorage.getItem(\"selectedLang\") || \"en\");\r\n  const [emailOrMobile, setEmailOrMobile] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [translatedText, setTranslatedText] = useState(null);\r\n\r\nconst translatePage = async (lang) => {\r\n    setTranslatedText(\"Translating... Please wait ‚è≥\");\r\n    setSelectedLang(lang); // Save selected language\r\n\r\n    try {\r\n        console.log(`Requesting translation for: ${lang}`);\r\n\r\n        const elements = document.body.getElementsByTagName(\"*\");\r\n        let textNodes = [];\r\n\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let element = elements[i];\r\n\r\n            // Handle visible text nodes\r\n            for (let node of element.childNodes) {\r\n                if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\" &&\r\n                    window.getComputedStyle(element).display !== \"none\") {\r\n                    textNodes.push({ node, text: node.nodeValue.trim() });\r\n                }\r\n            }\r\n\r\n            // Handle placeholders (e.g., input, textarea)\r\n            if (element.placeholder) {\r\n                textNodes.push({ node: element, text: element.placeholder, isPlaceholder: true });\r\n            }\r\n        }\r\n\r\n        // Send texts for translation\r\n        let texts = textNodes.map(item => item.text);\r\n        const response = await axios.post(\"http://localhost:5000/api/translate\", {\r\n            text: texts,\r\n            targetLang: lang,\r\n        });\r\n\r\n        console.log(\"Full Translation Response:\", response.data);\r\n\r\n        if (Array.isArray(response.data) && response.data.length === textNodes.length) {\r\n            textNodes.forEach((item, index) => {\r\n                let translatedText = response.data[index]?.translation_text || item.text;\r\n                if (item.isPlaceholder) {\r\n                    item.node.placeholder = translatedText;\r\n                } else {\r\n                    item.node.nodeValue = translatedText;\r\n                }\r\n            });\r\n\r\n            setTranslatedText(\"Translation successful ‚úÖ\");\r\n        } else {\r\n            console.error(\"Unexpected response format:\", response.data);\r\n            setTranslatedText(\"Translation failed. Unexpected response.\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Translation Error:\", error.response?.data || error.message);\r\n        setTranslatedText(\"Translation failed. Please try again.\");\r\n    }\r\n};\r\n\r\n// ‚úÖ Pass `selectedLang` safely inside the MutationObserver\r\nuseEffect(() => {\r\n    const observer = new MutationObserver(() => {\r\n        if (selectedLang) {\r\n            translatePage(selectedLang); // Use the last selected language\r\n        }\r\n    });\r\n\r\n    observer.observe(document.body, { childList: true, subtree: true });\r\n\r\n    return () => observer.disconnect(); // Cleanup on unmount\r\n}, [selectedLang]); // React will re-run if `selectedLang` changes\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleLanguageChange = async (lang) => {\r\n    setLanguage(lang);\r\n    setTranslatedText(null); // Reset translation\r\n\r\n    if (isVerified) {\r\n      await translatePage(lang);\r\n    }\r\n  };\r\n\r\n  /** üîπ Handle OTP Request */\r\n  const handleSendOtp = async () => {\r\n    if (!emailOrMobile) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer votre email.\" : \"Please enter an email or mobile number.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/send-otp\" : \"/user/send-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile } : { mobile: emailOrMobile };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Failed to send OTP.\");\r\n    }\r\n  };\r\n\r\n  /** üîπ Handle OTP Verification */\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(language === \"fr\" ? \"Veuillez entrer le code OTP.\" : \"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    const endpoint = language === \"fr\" ? \"/api/verify-otp\" : \"/user/verify-otp-mobile\";\r\n    const payload = language === \"fr\" ? { email: emailOrMobile, otp } : { mobile: emailOrMobile, otp };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000${endpoint}`, payload);\r\n      setIsVerified(true);\r\n      setMessage(response.data.message || \"OTP verified successfully!\");\r\n      await translatePage(language); // Translate page after OTP verification\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || \"Invalid or expired OTP.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-page\">\r\n  <h1 className=\"otp-title\">{translatedText || \"Welcome to the OTP verification system\"}</h1>\r\n\r\n  {/* üîπ Language Selection */}\r\n  <select\r\n    className=\"otp-language-selector\"\r\n    onChange={(e) => handleLanguageChange(e.target.value)}\r\n    value={language}\r\n  >\r\n    <option value=\"en\">English</option>\r\n    <option value=\"es\">Spanish</option>\r\n    <option value=\"hi\">Hindi</option>\r\n    <option value=\"pt\">Portuguese</option>\r\n    <option value=\"zh\">Chinese</option>\r\n    <option value=\"fr\">French</option>\r\n  </select>\r\n\r\n  {/* üîπ Conditional Input (Email for French, Mobile for Others) */}\r\n  <div className=\"otp-input-container\">\r\n    {language === \"fr\" ? (\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={emailOrMobile}\r\n        onChange={(e) => setEmailOrMobile(e.target.value)}\r\n      />\r\n    ) : (\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your mobile number\"\r\n        value={emailOrMobile}\r\n        onChange={(e) => setEmailOrMobile(e.target.value)}\r\n      />\r\n    )}\r\n    <button className=\"otp-button\" onClick={handleSendOtp}>\r\n      Send OTP\r\n    </button>\r\n  </div>\r\n\r\n  {message && <p className={`otp-message ${isVerified ? \"success\" : \"error\"}`}>{message}</p>}\r\n\r\n  {/* üîπ OTP Input Field */}\r\n  {emailOrMobile && !isVerified && (\r\n    <div className=\"otp-verification-container\">\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter OTP\"\r\n        value={otp}\r\n        onChange={(e) => setOtp(e.target.value)}\r\n      />\r\n      <button className=\"otp-button\" onClick={handleVerifyOtp}>\r\n        Verify OTP\r\n      </button>\r\n    </div>\r\n  )}\r\n\r\n  {/* üîπ Verification Success Message */}\r\n  {isVerified && (\r\n    <p className=\"otp-success-message\">\r\n      {translatedText || \"Verification successful! You are authenticated.\"}\r\n    </p>\r\n  )}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Multilingual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}