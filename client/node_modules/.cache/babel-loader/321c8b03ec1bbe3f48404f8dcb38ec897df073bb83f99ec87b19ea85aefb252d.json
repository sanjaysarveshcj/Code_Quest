{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"Profile\")) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"Profile\")).token}`;\n  }\n  return req;\n});\nexport const login = authdata => API.post(\"user/login\", authdata);\nexport const signup = authdata => API.post(\"user/signup\", authdata);\nexport const getallusers = () => API.get(\"/user/getallusers\");\nexport const updateprofile = (id, updatedata) => API.patch(`user/update/${id}`, updatedata);\nexport const postquestion = questiondata => API.post(\"/questions/Ask\", questiondata);\nexport const getallquestions = () => API.get(\"/questions/get\");\nexport const deletequestion = id => API.delete(`/questions/delete/${id}`);\nexport const votequestion = (id, value) => API.patch(`/questions/vote/${id}`, {\n  value\n});\nexport const postanswer = (id, noofanswers, answerbody, useranswered) => API.patch(`/answer/post/${id}`, {\n  noofanswers,\n  answerbody,\n  useranswered\n});\nexport const deleteanswer = (id, answerid, noofanswers) => API.patch(`/answer/delete/${id}`, {\n  answerid,\n  noofanswers\n});\nexport const generateOtpApi = email => API.post(\"/chatbot/generate-otp\", {\n  email\n});\nexport const getChatbotResponseApi = data => API.post(\"/chatbot/chatbot\", data);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","login","authdata","post","signup","getallusers","get","updateprofile","id","updatedata","patch","postquestion","questiondata","getallquestions","deletequestion","delete","votequestion","value","postanswer","noofanswers","answerbody","useranswered","deleteanswer","answerid","generateOtpApi","email","getChatbotResponseApi","data"],"sources":["D:/codequest-main (2)/codequest-main/client/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API=axios.create({\n    baseURL:\"http://localhost:5000\"\n});\n\nAPI.interceptors.request.use((req)=>{\n    if(localStorage.getItem(\"Profile\")){\n        req.headers.Authorization=`Bearer ${\n            JSON.parse(localStorage.getItem(\"Profile\")).token\n        }`;\n    }\n    return req;\n})\n\nexport const login=(authdata)=>API.post(\"user/login\",authdata);\nexport const signup=(authdata)=>API.post(\"user/signup\",authdata);\nexport const getallusers=()=> API.get(\"/user/getallusers\");\nexport const updateprofile=(id,updatedata)=>API.patch(`user/update/${id}`,updatedata)\n\n\nexport const postquestion=(questiondata)=>API.post(\"/questions/Ask\",questiondata);\nexport const getallquestions=()=>API.get(\"/questions/get\");\nexport const deletequestion=(id)=>API.delete(`/questions/delete/${id}`);\nexport const votequestion=(id,value)=>API.patch(`/questions/vote/${id}`,{value});\n\n\nexport const postanswer=(id,noofanswers,answerbody,useranswered)=>API.patch(`/answer/post/${id}`,{noofanswers,answerbody,useranswered});\nexport const deleteanswer=(id,answerid,noofanswers)=>API.patch(`/answer/delete/${id}`,{answerid,noofanswers});\n\nexport const generateOtpApi = (email) => API.post(\"/chatbot/generate-otp\", { email });\nexport const getChatbotResponseApi = (data) => API.post(\"/chatbot/chatbot\", data);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAACD,KAAK,CAACE,MAAM,CAAC;EACnBC,OAAO,EAAC;AACZ,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAG;EAChC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;IAC/BF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAC,UACtBC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAK,EACnD;EACN;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;AAEF,OAAO,MAAMQ,KAAK,GAAEC,QAAQ,IAAGf,GAAG,CAACgB,IAAI,CAAC,YAAY,EAACD,QAAQ,CAAC;AAC9D,OAAO,MAAME,MAAM,GAAEF,QAAQ,IAAGf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAACD,QAAQ,CAAC;AAChE,OAAO,MAAMG,WAAW,GAACA,CAAA,KAAKlB,GAAG,CAACmB,GAAG,CAAC,mBAAmB,CAAC;AAC1D,OAAO,MAAMC,aAAa,GAACA,CAACC,EAAE,EAACC,UAAU,KAAGtB,GAAG,CAACuB,KAAK,CAAC,eAAeF,EAAE,EAAE,EAACC,UAAU,CAAC;AAGrF,OAAO,MAAME,YAAY,GAAEC,YAAY,IAAGzB,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAACS,YAAY,CAAC;AACjF,OAAO,MAAMC,eAAe,GAACA,CAAA,KAAI1B,GAAG,CAACmB,GAAG,CAAC,gBAAgB,CAAC;AAC1D,OAAO,MAAMQ,cAAc,GAAEN,EAAE,IAAGrB,GAAG,CAAC4B,MAAM,CAAC,qBAAqBP,EAAE,EAAE,CAAC;AACvE,OAAO,MAAMQ,YAAY,GAACA,CAACR,EAAE,EAACS,KAAK,KAAG9B,GAAG,CAACuB,KAAK,CAAC,mBAAmBF,EAAE,EAAE,EAAC;EAACS;AAAK,CAAC,CAAC;AAGhF,OAAO,MAAMC,UAAU,GAACA,CAACV,EAAE,EAACW,WAAW,EAACC,UAAU,EAACC,YAAY,KAAGlC,GAAG,CAACuB,KAAK,CAAC,gBAAgBF,EAAE,EAAE,EAAC;EAACW,WAAW;EAACC,UAAU;EAACC;AAAY,CAAC,CAAC;AACvI,OAAO,MAAMC,YAAY,GAACA,CAACd,EAAE,EAACe,QAAQ,EAACJ,WAAW,KAAGhC,GAAG,CAACuB,KAAK,CAAC,kBAAkBF,EAAE,EAAE,EAAC;EAACe,QAAQ;EAACJ;AAAW,CAAC,CAAC;AAE7G,OAAO,MAAMK,cAAc,GAAIC,KAAK,IAAKtC,GAAG,CAACgB,IAAI,CAAC,uBAAuB,EAAE;EAAEsB;AAAM,CAAC,CAAC;AACrF,OAAO,MAAMC,qBAAqB,GAAIC,IAAI,IAAKxC,GAAG,CAACgB,IAAI,CAAC,kBAAkB,EAAEwB,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}