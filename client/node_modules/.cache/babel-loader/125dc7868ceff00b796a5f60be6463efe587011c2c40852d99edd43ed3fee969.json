{"ast":null,"code":"import axios from \"axios\";\nexport const UPDATE_POINTS = \"UPDATE_POINTS\";\nexport const TRANSFER_POINTS = \"TRANSFER_POINTS\";\nexport const ERROR = \"ERROR\";\nexport const updatePoints = (userId, points) => async dispatch => {\n  try {\n    const response = await axios.put(`/api/users/${userId}/update-points`, {\n      points\n    });\n    // Assuming the response returns the updated user object\n    dispatch({\n      type: UPDATE_POINTS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error(\"Error updating points:\", error);\n    dispatch({\n      type: ERROR,\n      payload: \"Failed to update points\"\n    });\n  }\n};\nexport const transferPoints = (fromUserId, toUserId, points) => async dispatch => {\n  try {\n    const response = await axios.post('/api/users/transfer-points', {\n      fromUserId,\n      toUserId,\n      points\n    });\n    // Assuming the response returns an array of updated users: [fromUser, toUser]\n    dispatch({\n      type: TRANSFER_POINTS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error(\"Error transferring points:\", error);\n    dispatch({\n      type: ERROR,\n      payload: \"Failed to transfer points\"\n    });\n  }\n};","map":{"version":3,"names":["axios","UPDATE_POINTS","TRANSFER_POINTS","ERROR","updatePoints","userId","points","dispatch","response","put","type","payload","data","error","console","transferPoints","fromUserId","toUserId","post"],"sources":["D:/codequest-main (2)/codequest-main/client/src/action/points.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const UPDATE_POINTS = \"UPDATE_POINTS\";\r\nexport const TRANSFER_POINTS = \"TRANSFER_POINTS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\nexport const updatePoints = (userId, points) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.put(`/api/users/${userId}/update-points`, { points });\r\n    // Assuming the response returns the updated user object\r\n    dispatch({ type: UPDATE_POINTS, payload: response.data });\r\n  } catch (error) {\r\n    console.error(\"Error updating points:\", error);\r\n    dispatch({ type: ERROR, payload: \"Failed to update points\" });\r\n  }\r\n};\r\n\r\nexport const transferPoints = (fromUserId, toUserId, points) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/users/transfer-points', { fromUserId, toUserId, points });\r\n    // Assuming the response returns an array of updated users: [fromUser, toUser]\r\n    dispatch({ type: TRANSFER_POINTS, payload: response.data });\r\n  } catch (error) {\r\n    console.error(\"Error transferring points:\", error);\r\n    dispatch({ type: ERROR, payload: \"Failed to transfer points\" });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,KAAK,GAAG,OAAO;AAE5B,OAAO,MAAMC,YAAY,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAClE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,cAAcJ,MAAM,gBAAgB,EAAE;MAAEC;IAAO,CAAC,CAAC;IAClF;IACAC,QAAQ,CAAC;MAAEG,IAAI,EAAET,aAAa;MAAEU,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CN,QAAQ,CAAC;MAAEG,IAAI,EAAEP,KAAK;MAAEQ,OAAO,EAAE;IAA0B,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGA,CAACC,UAAU,EAAEC,QAAQ,EAAEX,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAClF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAI,CAAC,4BAA4B,EAAE;MAAEF,UAAU;MAAEC,QAAQ;MAAEX;IAAO,CAAC,CAAC;IACjG;IACAC,QAAQ,CAAC;MAAEG,IAAI,EAAER,eAAe;MAAES,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDN,QAAQ,CAAC;MAAEG,IAAI,EAAEP,KAAK;MAAEQ,OAAO,EAAE;IAA4B,CAAC,CAAC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}